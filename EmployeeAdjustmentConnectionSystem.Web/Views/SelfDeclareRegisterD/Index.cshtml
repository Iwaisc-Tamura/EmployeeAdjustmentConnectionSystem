﻿﻿@using EmployeeAdjustmentConnectionSystem.COM.Util.Convert
@using EmployeeAdjustmentConnectionSystem.COM.Enum
@using EmployeeAdjustmentConnectionSystem.COM.Models
@model SelfDeclareRegisterDViewModels
@{
    ViewBag.Title = "自己申告書　(Ｄ表)";
}


@Styles.Render("~/Content/css/obj")
<!--タイトル-->
@using (Html.BeginForm("Index", "SelfDeclareRegisterD", null, FormMethod.Post, new { @class = "form-horizontal", @style = "zoom:120%" })) {    @*</!--1.2倍の拡大表示-->>*@
    <h4 class="text-center">@Html.DisplayFor(m => m.Head.SheetYear) 年度　自己申告書　(Ｄ表)</h4>
    @Html.HiddenFor(m => m.Head.ManageNo)
    @Html.HiddenFor(m => m.Head.CompetencyNo)
    @Html.HiddenFor(m => m.Head.InputMode)
    @Html.HiddenFor(m => m.Head.AuthButton)
    @Html.HiddenFor(m => m.Head.CancelButton)

    <!-- ヘッダ -->
    <div class="row">
        <div class="col-xs-8">
            <br />
            通常の「自己申告書」（A～C表）によらずに、会社に直接伝えたい事項がある人のみ、<br />
            この申告書に必要事項を入力のうえ、登録してください。<br />
            <br />
        </div>
    </div>

    <h4 style="margin-top:20px;">1 申告者</h4>
    <div class="row">
        <!--名前、社員番号等-->
        <div class="col-xs-6">
            <table class="table table-bordered ">
                <thead>
                    <tr class="h34">
                        <td class="info w80">氏名</td>
                        <td class="info w40">社員番号</td>
                        <td class="info w160">所属</td>
                        <td class="info w60">役職</td>
                        <td class="info w30">資格</td>
                    </tr>
                </thead>
                <tbody>
                    <tr class="h34">
                        <td>@Html.DisplayFor(m => m.Head.Name)</td>
                        <td>@Html.DisplayFor(m => m.Head.EmployeeNo)</td>
                        <td>@Html.DisplayFor(m => m.Head.DepartmentName)</td>
                        <td>@Html.DisplayFor(m => m.Head.PostName)</td>
                        <td>@Html.DisplayFor(m => m.Head.CompetencyName)</td>
                    </tr>
                </tbody>
            </table>
        </div>

        <!--面談の印鑑-->
        <div class="col-xs-3">
            <table class="table table-bordered">
                <thead>
                    @*承認ボタンヘルパー*@
                    @helper setButton(SelfDeclareMode auth, SelfDeclareMode mode, string name, string value) {
                        @Html.Raw("<td class=\"info\">")
                        if (auth == mode) {
                            var dmyId = "dmy" + value;
                            <button type="button" name="Signature" id="@dmyId" value="@value" class="btn-default btn-xs">@name</button>
                        } else {
                            @name
                        }
                        @Html.Raw("</td>")
}
                    <tr class="h34">
                        @setButton(Model.Head.AuthButton, SelfDeclareMode.DSelfSign, "本人", "21")
                        @setButton(Model.Head.AuthButton, SelfDeclareMode.DBossSign, "人事担当部長", "22")
                    </tr>
                </thead>
                <tbody>
                    @*CancelButtonヘルパー*@
                    @helper setCancelButton(string name, SelfDeclareMode cancel, SelfDeclareMode mode, string value) {
                        @Html.Raw("<td>")
                        @Html.Raw(name)
                        if (cancel == mode) {
                            var dmycId = "dmyc" + value;
                            var dmycValue = "c" + value;
                            <button type="button" class="btn btn-default btn-xs" name="SignCancel" id="@dmycId" value="@dmycValue"><i class="glyphicon glyphicon-remove"></i></button>
                        }
                        @Html.Raw("</td>")
}
                    <tr class="h34">
                        @setCancelButton(Model.Head.DSelfSign, Model.Head.CancelButton, SelfDeclareMode.DSelfSign, "21")
                        @setCancelButton(Model.Head.DBossSign, Model.Head.CancelButton, SelfDeclareMode.DBossSign, "22")
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <!--ボタンエリア-->
    <div class="row">
        <!--ボタン-->
        <div class="col-xs-3">
            <button type="button" name="DmySave" value="途中保存" class="btn-default pull-left" style="margin:0 5px 10px 0;" id="dmysave">途中保存</button>
            <button type="submit" name="Back" value="戻る" class="btn-default pull-left" id="backbutton" style="margin:0 5px 10px 0;margin-left:5px;">戻る</button>
            @*<button type="button" name="DmySave" value="途中保存" class="btn-default pull-left" style="margin-left:5px;" id="dmysave">前回データ取得</button>*@
        </div>
        <div class="col-xs-8">
            &#9632;@Html.DisplayFor(m => m.Head.SheetYear)年12月31日現在のデータを使用しています。<br />
            &#9632;入力を途中で中断する際は途中保存ボタンで保存して下さい。登録・承認については該当するボタンを押下して下さい。<br />
            &#9632;戻るボタンを押下するとTOPへ戻ります。<br />
            @*&#9632;前回データ取得ボタンを押下すると前回の自己申告書データで上書きします。(存在しない場合は何もしません。)*@
        </div>
    </div>

    <h4 style="margin-top:20px;">2 異動（職務・配置換え）の希望について</h4>
    <h6>（希望がある人のみ入力してください。）</h6>
    <!-- 住所 -->
    <div class="row">
        @*定義*@
        <script type="text/javascript">

            $(function () {
                //YaerOption1
                //switch ($(this).attr("id")) {
                //    case "Body_TransferDutyDepartment_2_1_1":
                //        selectward = "YaerOption1";
                //        break;
                //    case "Body_TransferDutyDepartment_2_2_1":
                //        selectward = "YaerOption2";
                //        return
                //        break;
                //    default:
                //        selectward = "YaerOption1";
                //        return
                //}


                if (document.getElementById("Body_TransferDutyDepartment_2_1_1").value.substr(0, 1) == "2") {
                    document.getElementById("YaerOption1").style.display = "inline";
                } else {
                    document.getElementById("YaerOption1").style.display = "none";
                }

                //初期値設定
                switch (document.getElementById("Body_TransferDutyDepartment_2_1_1").value.substr(0, 1)) {
                    case "1":
                    case "2":
                        setOption1(document.getElementById("Body_TransferDutyDepartment_2_1_2_1"));
                        setOption1(document.getElementById("Body_TransferDutyDepartment_2_1_2_2"));
                        setOption1(document.getElementById("Body_TransferDutyDepartment_2_1_2_3"));
                        break;
                    case "3":
                    case "4":
                        setOption2(document.getElementById("Body_TransferDutyDepartment_2_1_2_1"));
                        setOption2(document.getElementById("Body_TransferDutyDepartment_2_1_2_2"));
                        setOption2(document.getElementById("Body_TransferDutyDepartment_2_1_2_3"));
                        break;
                    case "5":
                        break;
                }
                switch (document.getElementById("Body_TransferDutyDepartment_2_2_1").value.substr(0, 1)) {
                    case "1":
                    case "2":
                        setOption1(document.getElementById("Body_TransferDutyDepartment_2_2_2_1"));
                        setOption1(document.getElementById("Body_TransferDutyDepartment_2_2_2_2"));
                        setOption1(document.getElementById("Body_TransferDutyDepartment_2_2_2_3"));
                        break;
                    case "3":
                    case "4":
                        setOption2(document.getElementById("Body_TransferDutyDepartment_2_2_2_1"));
                        setOption2(document.getElementById("Body_TransferDutyDepartment_2_2_2_2"));
                        setOption2(document.getElementById("Body_TransferDutyDepartment_2_2_2_3"));
                        break;
                    case "5":
                        break;
                }

                //選択値の再表示
                document.getElementById("Body_TransferDutyDepartment_2_1_2_1").value = '@Html.Raw(Model.Body.TransferDutyDepartment_2_1_2_1)';
                document.getElementById("Body_TransferDutyDepartment_2_1_2_2").value = '@Html.Raw(Model.Body.TransferDutyDepartment_2_1_2_2)';
                document.getElementById("Body_TransferDutyDepartment_2_1_2_3").value = '@Html.Raw(Model.Body.TransferDutyDepartment_2_1_2_3)';
                document.getElementById("Body_TransferDutyDepartment_2_2_2_1").value = '@Html.Raw(Model.Body.TransferDutyDepartment_2_2_2_1)';
                document.getElementById("Body_TransferDutyDepartment_2_2_2_2").value = '@Html.Raw(Model.Body.TransferDutyDepartment_2_2_2_2)';
                document.getElementById("Body_TransferDutyDepartment_2_2_2_3").value = '@Html.Raw(Model.Body.TransferDutyDepartment_2_2_2_3)';

                $("form input.Shokumu-other1").attr("readonly", "readonly");
                $("form input.Shokumu-other2").attr("readonly", "readonly");
                $("form select.Shokumu-select1").change(function () {
                    if ($(this).val() == "ZZ") {
                        $("form input.Shokumu-other1").removeAttr("readonly");
                    } else {
                        $("form input.Shokumu-other1").attr("readonly", "readonly").val("");
                    }
                });

                $("form select.Shokumu-select2").change(function () {
                    if ($(this).val() == "ZZ") {
                        $("form input.Shokumu-other2").removeAttr("readonly");
                    } else {
                        $("form input.Shokumu-other2").attr("readonly", "readonly").val("");
                    }
                });

                var selectarea2 = $("form select.GyoumuBunrui-select");
                var selectward2 = $("form textarea.Kinmuchiattr1-other");
                var selectward3 = $("form select.Kinmuchiattr-select");
                $(selectarea2).change(function () {
                    if (document.getElementById("Body_TransferDutyDepartment_4_1_1").value.substr(0, 1) == "7" || document.getElementById("Body_TransferDutyDepartment_4_1_2").value.substr(0, 1) == "7" || document.getElementById("Body_TransferDutyDepartment_4_1_3").value.substr(0, 1) == "7") {
                        $(selectward2).removeAttr("readonly");
                    } else {
                        $(selectward2).attr("readonly", "readonly").val("");
                    }
                    //var array = ["2", "3", "4", "5", "6"];
                    //if (array.indexOf(document.getElementById("Body_TransferDutyDepartment_4_1_1").value.substr(0, 1)) || array.indexOf(document.getElementById("Body_TransferDutyDepartment_4_1_3").value.substr(0, 1)) || array.indexOf(document.getElementById("Body_TransferDutyDepartment_4_1_3").value.substr(0, 1))) {
                    //    $(selectward3).removeAttr("readonly");
                    //} else {
                    //    $(selectward3).attr("readonly", "readonly").val("");
                    //}

                });
                $("form select.KiboItems-select").change(function () {
                    if ($(this).attr("id") == "Body_TransferDutyDepartment_2_1_1") {
                        if ($(this).val().substr(0, 1) == "2") {
                            document.getElementById("YaerOption1").style.display = "inline";
                        } else {
                            document.getElementById("YaerOption1").style.display = "none";
                            document.getElementById("Body_TransferDutyDepartment_2_1_1_Year").value = "";
                        }

                        switch ($(this).val().substr(0, 1)) {
                            case "1":
                            case "2":
                                setOption1(document.getElementById("Body_TransferDutyDepartment_2_1_2_1"));
                                setOption1(document.getElementById("Body_TransferDutyDepartment_2_1_2_2"));
                                setOption1(document.getElementById("Body_TransferDutyDepartment_2_1_2_3"));
                                break;
                            case "3":
                            case "4":
                                setOption2(document.getElementById("Body_TransferDutyDepartment_2_1_2_1"));
                                setOption2(document.getElementById("Body_TransferDutyDepartment_2_1_2_2"));
                                setOption2(document.getElementById("Body_TransferDutyDepartment_2_1_2_3"));
                                break;
                            default:
                                setOptionNone(document.getElementById("Body_TransferDutyDepartment_2_1_2_1"));
                                setOptionNone(document.getElementById("Body_TransferDutyDepartment_2_1_2_2"));
                                setOptionNone(document.getElementById("Body_TransferDutyDepartment_2_1_2_3"));
                                break;
                        }
                    }
                    if ($(this).attr("id") == "Body_TransferDutyDepartment_2_2_1") {
                        switch ($(this).val().substr(0, 1)) {
                            case "1":
                            case "2":
                                setOption1(document.getElementById("Body_TransferDutyDepartment_2_2_2_1"));
                                setOption1(document.getElementById("Body_TransferDutyDepartment_2_2_2_2"));
                                setOption1(document.getElementById("Body_TransferDutyDepartment_2_2_2_3"));
                                break;
                            case "3":
                            case "4":
                                setOption2(document.getElementById("Body_TransferDutyDepartment_2_2_2_1"));
                                setOption2(document.getElementById("Body_TransferDutyDepartment_2_2_2_2"));
                                setOption2(document.getElementById("Body_TransferDutyDepartment_2_2_2_3"));
                                break;
                            default:
                                setOptionNone(document.getElementById("Body_TransferDutyDepartment_2_2_2_1"));
                                setOptionNone(document.getElementById("Body_TransferDutyDepartment_2_2_2_2"));
                                setOptionNone(document.getElementById("Body_TransferDutyDepartment_2_2_2_3"));
                                break;
                        }
                    }

                });
            });
            //職務継続理由ポジティブセレクト項目
            function setOptionNone(select) {
                var selectItems = document.createElement('select');
                while (0 < select.childNodes.length) {
                    select.removeChild(select.childNodes[0]);
                }
                while (0 < selectItems.childNodes.length) {
                    select.appendChild(selectItems.childNodes[0]);
                }
            }
            function setOption1(select) {
                var selectItems = document.createElement('select');
                selectItems.options[1] = new Option("1:期間が短い", "1:期間が短い");
                selectItems.options[2] = new Option("2:一連の仕事が終わっていない", "2:一連の仕事が終わっていない");
                selectItems.options[3] = new Option("3:人間関係が良い", "3:人間関係が良い");
                selectItems.options[4] = new Option("4:仕事をマスターしていない", "4:仕事をマスターしていない");
                selectItems.options[5] = new Option("5:経験・能力を活かすことができる", "5:経験・能力を活かすことができる");
                selectItems.options[6] = new Option("6:性格的に合っている(適性である)", "6:性格的に合っている(適性である)");
                selectItems.options[7] = new Option("7:専門的にやりたい", "7:専門的にやりたい");
                selectItems.options[8] = new Option("8:適切な指導を受けている", "8:適切な指導を受けている");
                selectItems.options[9] = new Option("9:仕事に教務を感じている", "9:仕事に教務を感じている");
                selectItems.options[10] = new Option("10:自分の健康管理上問題がある", "10:自分の健康管理上問題がある");
                selectItems.options[11] = new Option("11:家族の健康管理上問題がある", "11:家族の健康管理上問題がある");
                selectItems.options[12] = new Option("12:子供の教育上問題がある", "12:子供の教育上問題がある");
                selectItems.options[13] = new Option("13:将来の生活設計上問題がある", "13:将来の生活設計上問題がある");
                selectItems.options[14] = new Option("14:通勤に便利である", "14:通勤に便利である");
                selectItems.options[15] = new Option("15:その他", "15:その他");

                while (0 < select.childNodes.length) {
                    select.removeChild(select.childNodes[0]);
                }
                while (0 < selectItems.childNodes.length) {
                    select.appendChild(selectItems.childNodes[0]);
                }
            }
            //職務継続理由ネガティブセレクト項目
            function setOption2(select) {
                var selectItems = document.createElement('select');
                selectItems.options[1] = new Option("1:期間が長い", "1:期間が長い");
                selectItems.options[2] = new Option("2:仕事の区切りがよい", "2:仕事の区切りがよい");
                selectItems.options[3] = new Option("3:人間関係上問題がある", "3:人間関係上問題がある");
                selectItems.options[4] = new Option("4:仕事をマスターした", "4:仕事をマスターした");
                selectItems.options[5] = new Option("5:経験・能力を他で活かしたい", "5:経験・能力を他で活かしたい");
                selectItems.options[6] = new Option("6:他の職場で能力を伸ばしたい", "6:他の職場で能力を伸ばしたい");
                selectItems.options[7] = new Option("7:性格的に合わない", "7:性格的に合わない");
                selectItems.options[8] = new Option("8:他の業務経験をしたい", "8:他の業務経験をしたい");
                selectItems.options[9] = new Option("9:指導が不適切である", "9:指導が不適切である");
                selectItems.options[10] = new Option("10:仕事に興味がわかない", "10:仕事に興味がわかない");
                selectItems.options[11] = new Option("11:自分の健康管理上問題がある", "11:自分の健康管理上問題がある");
                selectItems.options[12] = new Option("12:家族の健康管理上問題がある", "12:家族の健康管理上問題がある");
                selectItems.options[13] = new Option("13:子供の教育上問題がある", "13:子供の教育上問題がある");
                selectItems.options[14] = new Option("14:将来の生活設計上問題がある", "14:将来の生活設計上問題がある");
                selectItems.options[15] = new Option("15:通勤に不便である", "15:通勤に不便である");
                selectItems.options[16] = new Option("16:その他", "16:その他");
                while (0 < select.childNodes.length) {
                    select.removeChild(select.childNodes[0]);
                }
                while (0 < selectItems.childNodes.length) {
                    select.appendChild(selectItems.childNodes[0]);
                }
            }
        </script>

        @{
    //入力モード
    var attr1 = new Dictionary<string, object>() { { "class", "form-control" }, { "rows", "1" }, { "maxlength", "500" }, { "readonly", "readonly" } };
    var attr2 = new Dictionary<string, object>() { { "class", "form-control" }, { "rows", "5" }, { "maxlength", "500" }, { "readonly", "readonly" } };

    //ラジオ
    var attrRadio1 = new Dictionary<string, object>() { { "id", "attrRadio1" } };
    var attrRadio2 = new Dictionary<string, object>() { { "id", "attrRadio2" } };
    var attrRadio3 = new Dictionary<string, object>() { { "id", "attrRadio3" } };
    var attrRadio4 = new Dictionary<string, object>() { { "id", "attrRadio4" } };
    var radioRead = true;
    var ReadOption = true;

    var Kinmuchiattr1 = new Dictionary<string, object>() { { "class", "form-control Kinmuchiattr1-other" }, { "size", "10" }, { "maxlength", "20" }, { "readonly", "readonly" } };

    switch (Model.Head.InputMode) {
                case SelfDeclareMode.DSelfSign:

            //設定本人・面談者時
            //計画・方針入力化
            attr1.Remove("readonly");
            attr2.Remove("readonly");
            radioRead = false;
            ReadOption = false;

            if (Model.Body.TransferDutyDepartment_4_1_1.Length > 2) {
                if (Model.Body.TransferDutyDepartment_4_1_1.Substring(0, 1) == "7") {
                    Kinmuchiattr1.Remove("readonly");
                }
            }
            if (Model.Body.TransferDutyDepartment_4_1_2.Length > 2) {
                if (Model.Body.TransferDutyDepartment_4_1_2.Substring(0, 1) == "7") {
                    Kinmuchiattr1.Remove("readonly");
                }
            }
            if (Model.Body.TransferDutyDepartment_4_1_3.Length > 2) {
                if (Model.Body.TransferDutyDepartment_4_1_3.Substring(0, 1) == "7") {
                    Kinmuchiattr1.Remove("readonly");
                }
            }
            break;
        default:
            //上記以外 ReadOnly
            break;
    }

    //担当職務希望リスト
    var ShokumuKiboItems = new SelectListItem[] {
                        new SelectListItem() { Value="1:是非引き続きやりたい", Text="1:是非引き続きやりたい" },
                        new SelectListItem() { Value="2:できれば当分の間引き続きやりたい", Text="2:できれば当分の間引き続きやりたい" },
                        new SelectListItem() { Value="3:できれば変わりたい", Text="3:できれば変わりたい" },
                        new SelectListItem() { Value="4:是非変わりたい", Text="4:是非変わりたい" },
                        new SelectListItem() { Value="5:特に希望はない", Text="5:特に希望はない" }
                    };
    //勤務地希望リスト
    var KinmuKiboItems = new SelectListItem[] {
                new SelectListItem() { Value="1:是非このままいたい", Text="1:是非このままいたい" },
                new SelectListItem() { Value="2:できればこのままいたい", Text="2:できればこのままいたい" },
                new SelectListItem() { Value="3:できれば替わりたい", Text="3:できれば替わりたい" },
                new SelectListItem() { Value="4:是非替わりたい", Text="4:是非替わりたい" },
                new SelectListItem() { Value="5:特に希望はない", Text="5:特に希望はない" }
            };

    //理由リスト1
    var causeItems1 = new SelectListItem[] {
            };

    //理由リスト２
    var causeItems2 = new SelectListItem[] {
            };

    //年数　リスト
    var yearItems = new SelectListItem[] {
                new SelectListItem() { Value="0", Text=" 0" },
                new SelectListItem() { Value="1", Text=" 1" },
                new SelectListItem() { Value="2", Text=" 2" },
                new SelectListItem() { Value="3", Text=" 3" },
                new SelectListItem() { Value="4", Text=" 4" },
                new SelectListItem() { Value="5", Text=" 5" },
                new SelectListItem() { Value="6", Text=" 6" },
                new SelectListItem() { Value="7", Text=" 7" },
                new SelectListItem() { Value="8", Text=" 8" },
                new SelectListItem() { Value="9", Text=" 9" },
                new SelectListItem() { Value="10", Text="10" },
                new SelectListItem() { Value="11", Text="11" },
                new SelectListItem() { Value="12", Text="12" },
                new SelectListItem() { Value="13", Text="13" },
                new SelectListItem() { Value="14", Text="14" },
                new SelectListItem() { Value="15", Text="15" },
                new SelectListItem() { Value="16", Text="16" },
                new SelectListItem() { Value="17", Text="17" },
                new SelectListItem() { Value="18", Text="18" },
                new SelectListItem() { Value="19", Text="19" },
                new SelectListItem() { Value="20", Text="20" }
            };

    //時間：時　リスト
    var hourItems = new SelectListItem[] {
            //2021-01-15 iwai-tamura upd-str ---
                new SelectListItem() { Value="0", Text=" 0" },
                new SelectListItem() { Value="1", Text=" 1" },
                new SelectListItem() { Value="2", Text=" 2" },
                new SelectListItem() { Value="3", Text=" 3" },
                new SelectListItem() { Value="4", Text=" 4" },
                new SelectListItem() { Value="5", Text=" 5" },
                new SelectListItem() { Value="6", Text=" 6" }
                //new SelectListItem() { Value="0", Text=" 0" },
                //new SelectListItem() { Value="1", Text=" 1" },
                //new SelectListItem() { Value="2", Text=" 2" },
                //new SelectListItem() { Value="3", Text=" 3" },
                //new SelectListItem() { Value="4", Text=" 4" },
                //new SelectListItem() { Value="5", Text=" 5" },
                //new SelectListItem() { Value="6", Text=" 6" },
                //new SelectListItem() { Value="7", Text=" 7" },
                //new SelectListItem() { Value="8", Text=" 8" },
                //new SelectListItem() { Value="9", Text=" 9" },
                //new SelectListItem() { Value="10", Text="10" },
                //new SelectListItem() { Value="11", Text="11" },
                //new SelectListItem() { Value="12", Text="12" },
                //new SelectListItem() { Value="13", Text="13" },
                //new SelectListItem() { Value="14", Text="14" },
                //new SelectListItem() { Value="15", Text="15" },
                //new SelectListItem() { Value="16", Text="16" },
                //new SelectListItem() { Value="17", Text="17" },
                //new SelectListItem() { Value="18", Text="18" },
                //new SelectListItem() { Value="19", Text="19" },
                //new SelectListItem() { Value="20", Text="20" },
                //new SelectListItem() { Value="21", Text="21" },
                //new SelectListItem() { Value="22", Text="22" },
                //new SelectListItem() { Value="23", Text="23" },
                //new SelectListItem() { Value="24", Text="24" }
            //2021-01-15 iwai-tamura upd-end ---
            };

    //時間：分　リスト
    var minuteItems = new SelectListItem[] {
            //2021-01-15 iwai-tamura upd-str ---
                new SelectListItem() { Value="0", Text=" 0" },
                new SelectListItem() { Value="5", Text=" 5" },
                new SelectListItem() { Value="10", Text="10" },
                new SelectListItem() { Value="15", Text="15" },
                new SelectListItem() { Value="20", Text="20" },
                new SelectListItem() { Value="25", Text="25" },
                new SelectListItem() { Value="30", Text="30" },
                new SelectListItem() { Value="35", Text="35" },
                new SelectListItem() { Value="40", Text="40" },
                new SelectListItem() { Value="45", Text="45" },
                new SelectListItem() { Value="50", Text="50" },
                new SelectListItem() { Value="55", Text="55" }
                //new SelectListItem() { Value="0", Text=" 0" },
                //new SelectListItem() { Value="1", Text=" 1" },
                //new SelectListItem() { Value="2", Text=" 2" },
                //new SelectListItem() { Value="3", Text=" 3" },
                //new SelectListItem() { Value="4", Text=" 4" },
                //new SelectListItem() { Value="5", Text=" 5" },
                //new SelectListItem() { Value="6", Text=" 6" },
                //new SelectListItem() { Value="7", Text=" 7" },
                //new SelectListItem() { Value="8", Text=" 8" },
                //new SelectListItem() { Value="9", Text=" 9" },
                //new SelectListItem() { Value="10", Text="10" },
                //new SelectListItem() { Value="11", Text="11" },
                //new SelectListItem() { Value="12", Text="12" },
                //new SelectListItem() { Value="13", Text="13" },
                //new SelectListItem() { Value="14", Text="14" },
                //new SelectListItem() { Value="15", Text="15" },
                //new SelectListItem() { Value="16", Text="16" },
                //new SelectListItem() { Value="17", Text="17" },
                //new SelectListItem() { Value="18", Text="18" },
                //new SelectListItem() { Value="19", Text="19" },
                //new SelectListItem() { Value="20", Text="20" },
                //new SelectListItem() { Value="21", Text="21" },
                //new SelectListItem() { Value="22", Text="22" },
                //new SelectListItem() { Value="23", Text="23" },
                //new SelectListItem() { Value="24", Text="24" },
                //new SelectListItem() { Value="25", Text="25" },
                //new SelectListItem() { Value="26", Text="26" },
                //new SelectListItem() { Value="27", Text="27" },
                //new SelectListItem() { Value="28", Text="28" },
                //new SelectListItem() { Value="29", Text="29" },
                //new SelectListItem() { Value="30", Text="30" },
                //new SelectListItem() { Value="31", Text="31" },
                //new SelectListItem() { Value="32", Text="32" },
                //new SelectListItem() { Value="33", Text="33" },
                //new SelectListItem() { Value="34", Text="34" },
                //new SelectListItem() { Value="35", Text="35" },
                //new SelectListItem() { Value="36", Text="36" },
                //new SelectListItem() { Value="37", Text="37" },
                //new SelectListItem() { Value="38", Text="38" },
                //new SelectListItem() { Value="39", Text="39" },
                //new SelectListItem() { Value="40", Text="40" },
                //new SelectListItem() { Value="41", Text="41" },
                //new SelectListItem() { Value="42", Text="42" },
                //new SelectListItem() { Value="43", Text="43" },
                //new SelectListItem() { Value="44", Text="44" },
                //new SelectListItem() { Value="45", Text="45" },
                //new SelectListItem() { Value="46", Text="46" },
                //new SelectListItem() { Value="47", Text="47" },
                //new SelectListItem() { Value="48", Text="48" },
                //new SelectListItem() { Value="49", Text="49" },
                //new SelectListItem() { Value="50", Text="50" },
                //new SelectListItem() { Value="51", Text="51" },
                //new SelectListItem() { Value="52", Text="52" },
                //new SelectListItem() { Value="53", Text="53" },
                //new SelectListItem() { Value="54", Text="54" },
                //new SelectListItem() { Value="55", Text="55" },
                //new SelectListItem() { Value="56", Text="56" },
                //new SelectListItem() { Value="57", Text="57" },
                //new SelectListItem() { Value="58", Text="58" },
                //new SelectListItem() { Value="59", Text="59" }
            //2021-01-15 iwai-tamura upd-end ---
            };

    //勤務地一覧リスト
    var KinmuchiItems = new SelectListItem[] {
                new SelectListItem() { Value="1:本社", Text="1 :本社" },
                //2020-12-24 iwai-tamura upd-str ------
                //new SelectListItem() { Value="8:住生活事業本部", Text="8 :住生活事業本部" },
                //2020-12-24 iwai-tamura upd-end ------
                new SelectListItem() { Value="2:東京支社", Text="2 :東京支社" },
                new SelectListItem() { Value="3:関東支社", Text="3 :関東支社" },
                new SelectListItem() { Value="4:大阪支社", Text="4 :大阪支社" },
                new SelectListItem() { Value="5:名古屋支社", Text="5 :名古屋支社" },
                new SelectListItem() { Value="6:福岡支社", Text="6 :福岡支社" },
                new SelectListItem() { Value="7:出向", Text="7 :出向" }
            };

    //支社支店選択リスト
    var ShishaShitenItems = new SelectListItem[] {
                new SelectListItem() { Value="1:支社事務所", Text="1:支社事務所" },
                new SelectListItem() { Value="2:支店事務所", Text="2:支店事務所" }
            };

    //業務分類一覧表
    var GyoumuBunruiGroup1 = new SelectListGroup() { Name = "企画" };
    var GyoumuBunruiGroup2 = new SelectListGroup() { Name = "総務" };
    var GyoumuBunruiGroup3 = new SelectListGroup() { Name = "安全管理工事契約" };
    var GyoumuBunruiGroup4 = new SelectListGroup() { Name = "人事研修" };
    var GyoumuBunruiGroup5 = new SelectListGroup() { Name = "労務厚生" };
    var GyoumuBunruiGroup6 = new SelectListGroup() { Name = "経理" };
    var GyoumuBunruiGroup7 = new SelectListGroup() { Name = "CS" };
    var GyoumuBunruiGroup8 = new SelectListGroup() { Name = "監査" };
    var GyoumuBunruiGroup9 = new SelectListGroup() { Name = "生活サービス施設" };
    var GyoumuBunruiGroup10 = new SelectListGroup() { Name = "生活環境サポート" };
    var GyoumuBunruiGroup11 = new SelectListGroup() { Name = "生活環境サポート 24時間緊急サービス" };
    var GyoumuBunruiGroup12 = new SelectListGroup() { Name = "ライフライン管理" };
    var GyoumuBunruiGroup13 = new SelectListGroup() { Name = "予防保全緊急修繕" };
    var GyoumuBunruiGroup14 = new SelectListGroup() { Name = "室内リフォーム" };
    var GyoumuBunruiGroup15 = new SelectListGroup() { Name = "屋外環境整備" };
    var GyoumuBunruiGroup16 = new SelectListGroup() { Name = "技術開発" };
    var GyoumuBunruiGroup17 = new SelectListGroup() { Name = "営業企画" };
    var GyoumuBunruiGroup18 = new SelectListGroup() { Name = "分譲住宅管理" };
    var GyoumuBunruiGroup19 = new SelectListGroup() { Name = "研究開発" };
    var GyoumuBunruiGroup20 = new SelectListGroup() { Name = "事業企画・推進" };
    var GyoumuBunruiGroupZ = new SelectListGroup() { Name = "その他" };
    var GyoumuBunruiItems = new SelectListItem[] {
              new SelectListItem() { Value="1:企画・経営管理", Text="1 :企画・経営管理",Group = GyoumuBunruiGroup1 },
              new SelectListItem() { Value="2:システム開発", Text="2 :システム開発",Group = GyoumuBunruiGroup1 },
              new SelectListItem() { Value="3:総務・文書管理", Text="3 :総務・文書管理",Group = GyoumuBunruiGroup2 },
              new SelectListItem() { Value="4:秘書", Text="4 :秘書",Group = GyoumuBunruiGroup2 },
              new SelectListItem() { Value="5:広報", Text="5 :広報",Group = GyoumuBunruiGroup2 },
              new SelectListItem() { Value="6:法務・コンプライアンス", Text="6 :法務・コンプライアンス",Group = GyoumuBunruiGroup2 },
              new SelectListItem() { Value="7:安全管理・品質管理・産業廃棄物管理", Text="7 :安全管理・品質管理・産業廃棄物管理",Group = GyoumuBunruiGroup3 },
              new SelectListItem() { Value="8:工事契約・材料管理", Text="8 :工事契約・材料管理",Group = GyoumuBunruiGroup3 },
              new SelectListItem() { Value="9:人事任用・採用", Text="9 :人事任用・採用",Group = GyoumuBunruiGroup4 },
              new SelectListItem() { Value="10:給与管理", Text="10:給与管理",Group = GyoumuBunruiGroup4 },
              new SelectListItem() { Value="11:社会保険・労働保険", Text="11:社会保険・労働保険",Group = GyoumuBunruiGroup4 },
              new SelectListItem() { Value="12:研修", Text="12:研修",Group = GyoumuBunruiGroup4 },
              new SelectListItem() { Value="13:労務", Text="13:労務",Group = GyoumuBunruiGroup5 },
              new SelectListItem() { Value="14:福利厚生・共済会", Text="14:福利厚生・共済会",Group = GyoumuBunruiGroup5 },
              new SelectListItem() { Value="15:経理(決算・税務)", Text="15:経理(決算・税務)",Group = GyoumuBunruiGroup6 },
              new SelectListItem() { Value="16:財務(出納・収納)", Text="16:財務(出納・収納)",Group = GyoumuBunruiGroup6 },
              new SelectListItem() { Value="17:工事経理", Text="17:工事経理",Group = GyoumuBunruiGroup6 },

              //2021-01-15 iwai-tamura upd-str ---
              new SelectListItem() { Value="18:CSR活動推進・お客様相談", Text="18:CSR活動推進・お客様相談",Group = GyoumuBunruiGroup7 },
              //new SelectListItem() { Value="18:お客様相談・CS管理", Text="18:お客様相談・CS管理",Group = GyoumuBunruiGroup7 },
              //2021-01-15 iwai-tamura upd-end ---

              new SelectListItem() { Value="19:監査業務", Text="19:監査業務",Group = GyoumuBunruiGroup8 },
              new SelectListItem() { Value="21:団地内清掃点検", Text="21:団地内清掃点検",Group = GyoumuBunruiGroup10 },
              new SelectListItem() { Value="22:団地管理･単身住宅管理･その他の受託等", Text="22:団地管理･単身住宅管理･その他の受託等",Group = GyoumuBunruiGroup11 },
              new SelectListItem() { Value="23:中央監視", Text="23:中央監視",Group = GyoumuBunruiGroup11 },
              new SelectListItem() { Value="24:損害保険・生命保険・商品販売", Text="24:損害保険・生命保険・商品販売",Group = GyoumuBunruiGroup11 },
              new SelectListItem() { Value="25:緊急事故受付管理", Text="25:緊急事故受付管理",Group = GyoumuBunruiGroup11 },
              new SelectListItem() { Value="26:給水施設管理・受水槽清掃等", Text="26:給水施設管理・受水槽清掃等",Group = GyoumuBunruiGroup12 },
              new SelectListItem() { Value="27:汚水施設管理", Text="27:汚水施設管理",Group = GyoumuBunruiGroup12 },
              new SelectListItem() { Value="28:雑排水管清掃等", Text="28:雑排水管清掃等",Group = GyoumuBunruiGroup12 },
              new SelectListItem() { Value="29:給水設備等修繕工事", Text="29:給水設備等修繕工事",Group = GyoumuBunruiGroup12 },
              new SelectListItem() { Value="30:保守点検", Text="30:保守点検",Group = GyoumuBunruiGroup13 },
              new SelectListItem() { Value="31:経常修繕工事", Text="31:経常修繕工事",Group = GyoumuBunruiGroup13 },
              new SelectListItem() { Value="32:空家補修工事", Text="32:空家補修工事",Group = GyoumuBunruiGroup14 },
              new SelectListItem() { Value="33:ライフアップ工事", Text="33:ライフアップ工事",Group = GyoumuBunruiGroup14 },
              new SelectListItem() { Value="34:リニューアル工事", Text="34:リニューアル工事",Group = GyoumuBunruiGroup14 },
              new SelectListItem() { Value="35:賃貸リフォーム・小修理", Text="35:賃貸リフォーム・小修理",Group = GyoumuBunruiGroup14 },
              new SelectListItem() { Value="36:居住環境修繕工事(建築・土木)", Text="36:居住環境修繕工事(建築・土木)",Group = GyoumuBunruiGroup15 },
              new SelectListItem() { Value="37:植栽管理", Text="37:植栽管理",Group = GyoumuBunruiGroup15 },
              new SelectListItem() { Value="38:ストック改修技術開発(調査及び工事)", Text="38:ストック改修技術開発(調査及び工事)",Group = GyoumuBunruiGroup16 },
              new SelectListItem() { Value="39:マーケティング", Text="39:マーケティング",Group = GyoumuBunruiGroup17 },
              new SelectListItem() { Value="40:新規事業開発・商品開発", Text="40:新規事業開発・商品開発",Group = GyoumuBunruiGroup17 },
              new SelectListItem() { Value="41:新規受託営業", Text="41:新規受託営業",Group = GyoumuBunruiGroup18 },
              new SelectListItem() { Value="42:大規模修繕工事等受託営業", Text="42:大規模修繕工事等受託営業",Group = GyoumuBunruiGroup18 },
              new SelectListItem() { Value="43:分譲等事務管理", Text="43:分譲等事務管理",Group = GyoumuBunruiGroup18 },
              new SelectListItem() { Value="44:分譲等清掃", Text="44:分譲等清掃",Group = GyoumuBunruiGroup18 },
              new SelectListItem() { Value="45:分譲等施設管理", Text="45:分譲等施設管理",Group = GyoumuBunruiGroup18 },
              new SelectListItem() { Value="46:分譲リフォーム", Text="46:分譲リフォーム",Group = GyoumuBunruiGroup18 },
              new SelectListItem() { Value="47:分譲工事・特定工事・調査診断", Text="47:分譲工事・特定工事・調査診断",Group = GyoumuBunruiGroup18 },
              new SelectListItem() { Value="48:マンション相談", Text="48:マンション相談",Group = GyoumuBunruiGroup18 },
              new SelectListItem() { Value="49:技術開発研究", Text="49:技術開発研究",Group = GyoumuBunruiGroup19 },
              new SelectListItem() { Value="50:環境分析測定", Text="50:環境分析測定",Group = GyoumuBunruiGroup19 },
              new SelectListItem() { Value="51:新規事業開発", Text="51:新規事業開発",Group = GyoumuBunruiGroup20 },

              //2021-01-15 iwai-tamura upd-str ---
              new SelectListItem() { Value="52:コンビニ等", Text="52:コンビニ等",Group = GyoumuBunruiGroup20 },
              new SelectListItem() { Value="53:商業施設等", Text="53:商業施設等",Group = GyoumuBunruiGroup20 },
              new SelectListItem() { Value="54:ベーカリー等", Text="54:ベーカリー等",Group = GyoumuBunruiGroup20 },
              //new SelectListItem() { Value="52:コンビニ", Text="52:コンビニ",Group = GyoumuBunruiGroup20 },
              //new SelectListItem() { Value="53:商業施設等", Text="53:商業施設等",Group = GyoumuBunruiGroup20 },
              //new SelectListItem() { Value="54:ベーカリー", Text="54:ベーカリー",Group = GyoumuBunruiGroup20 },
              //2021-01-15 iwai-tamura upd-end ---

              new SelectListItem() { Value="ZZ:その他", Text="ZZ:その他",Group = GyoumuBunruiGroupZ }
            };
            @helper setDdl1(bool isRead, int cnt, string name, string value, SelectListItem[] selItems) {
                <div class="form-group-custom">
                    @{
                        var id = string.Format("Body.{0}", name);
                        if (isRead) {
                            @Html.TextBox(id, value, new { @class = "form-control", @readonly = "readonly", style = "height:16px; vertical-align:top;" })
                        } else {
                            @Html.DropDownList(id, new SelectList((IEnumerable<SelectListItem>)selItems, "Value", "Text", value), "", new { @class = "KiboItems-select" })
                        }
                    }
                </div>
}

            @helper setCauseDdl(bool isRead, int cnt, string name, string value, SelectListItem[] selItems) {
                <div class="form-group-custom fome-inline h24">
                    @{
                        var id = string.Format("Body.{0}", name);
                        if (isRead) {
                            <div style="display:flex;">
                                <label class="w70" style="font-weight:normal;">@string.Format("理由(順位{0})", cnt)</label>
                                @Html.TextBox(id, value, new { @class = "form-control", @readonly = "readonly", style = "width: 200px;height:16px; vertical-align:top;" })
                            </div>
                        } else {
                            <label class="w70" style="font-weight:normal;">@string.Format("理由(順位{0})", cnt)</label>
                            @Html.DropDownList(id, new SelectList((IEnumerable<SelectListItem>)selItems, "Value", "Text", value), "", "")
                        }
                    }
                </div>
}

            @helper setTimeDdl(bool isRead, int cnt, string scale, string name, string value, SelectListItem[] selItems) {
                <div class="form-group-custom fome-inline" style="display:flex;">
                    @{
                        var id = string.Format("Body.{0}", name);
                        if (isRead) {
                            @Html.TextBox(id, value, new { @class = "form-control", @readonly = "readonly", style = "width: 20px;height:16px; vertical-align:top;" })
                        } else {
                            @Html.DropDownList(id, new SelectList((IEnumerable<SelectListItem>)selItems, "Value", "Text", value), "", "")
                        }
                    }
                    <label style="font-weight:normal;">@scale</label>
                </div>
}
            @helper setKinmuchi(bool isRead, int cnt, string label, string name, string value, SelectListItem[] selItems) {
                <div class="h24">
                    @{
                        var id = string.Format("Body.{0}", name);
                        if (isRead) {
                            <div style="display:flex;">
                                <label class="w50" style="font-weight:normal;">@label</label> @Html.TextBox(id, value, new { @class = "form-control", @readonly = "readonly", style = "width: 100px;height:16px; vertical-align:top;" })
                            </div>
                        } else {
                            <label class="w50" style="font-weight:normal;">@label</label> @Html.DropDownList(id, selItems, "", new { @class = "GyoumuBunrui-select", style = "width: 100px; vertical-align:top;" })
                        }
                    }
                </div>
}
            @helper setKinmubasho(bool isRead, int cnt, string name, string value, SelectListItem[] selItems) {
                <div class="h24">
                    @{
                        var id = string.Format("Body.{0}", name);
                        if (isRead) {
                            @Html.TextBox(id, value, new { @class = "form-control", @readonly = "readonly", style = "width: 100px;height:16px; vertical-align:top;" })
                        } else {
                            @Html.DropDownList(id, selItems, "", new { @class = "Kinmuchiattr-select", style = "width: 100px; vertical-align:top;" })
                        }
                    }
                </div>
}

            @helper setShokumu1(bool isRead, int cnt, string name, string value, SelectListItem[] selItems) {
                <div class="h24">
                    @{
                        var id = string.Format("Body.{0}", name);
                        if (isRead) {
                            @Html.TextBox(id, value, new { @class = "form-control", @readonly = "readonly", style = "width: 250px;height:16px; vertical-align:top;" })
                        } else {
                            @Html.DropDownList(id, selItems, "", new { @class = "Shokumu-select1", style = "width: 250px; vertical-align:top;" })
                        }
                    }
                </div>
}
        }
        <div class="col-xs-7">
            <table class="table table-bordered">
                <colgroup>
                    <col style="width:100px;" />
                    <col style="width:50px;" />
                    <col style="width:50px;" />
                </colgroup>
                <thead>
                    <tr class="info">
                        <td colspan="3">
                            (1)次の異動（職務・配置換え）に関する設問について、該当する項目を選択してください。
                        </td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td style="border-style:none;">
                            昨年の異動（職務・配置換え）に関する申告の有無
                        </td>
                        @if (radioRead) {
                            @Html.HiddenFor(m => m.Body.TransferDutyDepartment_1_1)
                            var intext = Model.Body.TransferDutyDepartment_1_1 == Move.In ? "●" : "○";
                            var outtext = Model.Body.TransferDutyDepartment_1_1 == Move.Out ? "●" : "○";
                            <td style="border-style:none;">@intext 申告した</td>
                            <td style="border-style:none;">@outtext 申告していない</td>
                        } else {
                            <td style="border-style:none;">
                                <div>
                                    <label>
                                        @Html.RadioButtonFor(m => m.Body.TransferDutyDepartment_1_1, Move.In, attrRadio1)
                                    </label>
                                    申告した
                                </div>
                            </td>
                            <td style="border-style:none;">
                                <div>
                                    <label>
                                        @Html.RadioButtonFor(m => m.Body.TransferDutyDepartment_1_1, Move.Out, attrRadio1)
                                    </label>
                                    申告していない
                                </div>
                            </td>
                        }
                    </tr>
                    <tr>
                        <td style="border-style:none;">
                            異動（職務・配置換え）希望に対する上司との話し合いの有無
                        </td>
                        @if (radioRead) {
                            @Html.HiddenFor(m => m.Body.TransferDutyDepartment_1_2)
                            var intext = Model.Body.TransferDutyDepartment_1_2 == Move.In ? "●" : "○";
                            var outtext = Model.Body.TransferDutyDepartment_1_2 == Move.Out ? "●" : "○";
                            <td style="border-style:none;">@intext 話し合った</td>
                            <td style="border-style:none;">@outtext 話し合っていない</td>
                        } else {
                            <td style="border-style:none;">
                                <div>
                                    <label>
                                        @Html.RadioButtonFor(m => m.Body.TransferDutyDepartment_1_2, Move.In, attrRadio2)
                                    </label>
                                    話し合った
                                </div>
                            </td>
                            <td style="border-style:none;">
                                <div>
                                    <label>
                                        @Html.RadioButtonFor(m => m.Body.TransferDutyDepartment_1_2, Move.Out, attrRadio2)
                                    </label>
                                    話し合っていない
                                </div>
                            </td>
                        }
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <div class="row">
        <div class="col-xs-7">
            <table class="table table-bordered">
                <colgroup>
                    <col style="width:80px;" />
                    <col style="width:20px;" />
                    <col style="width:80px;" />
                </colgroup>
                <thead>
                    <tr class="info">
                        <td colspan="3">
                            (2)次の各項目について、希望するものを選択してください。
                        </td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td style="border-style:none;" colspan="3">
                            現在の担当職務について
                        </td>
                    </tr>
                    <tr>
                        <td style="border-style:none;">
                            @setDdl1(ReadOption, 1, "TransferDutyDepartment_2_1_1", Model.Body.TransferDutyDepartment_2_1_1, ShokumuKiboItems)
                        </td>
                        <td style="border-style:none;" colspan="2">
                            <div id="YaerOption1">
                                @setTimeDdl(ReadOption, 1, "年程度", "TransferDutyDepartment_2_1_1_Year", Model.Body.TransferDutyDepartment_2_1_1_Year, yearItems)
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td style="border-style:none;" colspan="3">
                            次の中からその理由を選んでください。(3つ以内で選択し、複数回答の場合は、比重の高い順に選択してください。)
                        </td>
                    </tr>
                    <tr>
                        <td style="border-style:none;vertical-align:top;" rowspan="4">
                            @setCauseDdl(ReadOption, 1, "TransferDutyDepartment_2_1_2_1", Model.Body.TransferDutyDepartment_2_1_2_1, causeItems2)
                            @setCauseDdl(ReadOption, 2, "TransferDutyDepartment_2_1_2_2", Model.Body.TransferDutyDepartment_2_1_2_2, causeItems2)
                            @setCauseDdl(ReadOption, 3, "TransferDutyDepartment_2_1_2_3", Model.Body.TransferDutyDepartment_2_1_2_3, causeItems2)
                        </td>
                        <td style="border-style:none;" colspan="2">
                            通勤に関する理由を選択した場合に通勤時間を入力してください。
                        </td>
                    </tr>
                    <tr>
                        <td style="border-style:none;">
                            @setTimeDdl(ReadOption, 1, "時間", "TransferDutyDepartment_2_1_2_Hour", Model.Body.TransferDutyDepartment_2_1_2_Hour, hourItems)
                        </td>
                        <td style="border-style:none;">
                            @setTimeDdl(ReadOption, 1, "分", "TransferDutyDepartment_2_1_2_Minute", Model.Body.TransferDutyDepartment_2_1_2_Minute, minuteItems)
                        </td>
                    </tr>
                    <tr>
                        <td style="border-style:none;" colspan="2">
                            その他を選んだ場合に入力してください。
                        </td>
                    </tr>
                    <tr>
                        <td style="border-style:none;" colspan="2">
                            @Html.TextAreaFor(m => m.Body.TransferDutyDepartment_2_1_2_Other, attr1)
                        </td>
                    </tr>

                    <tr>
                        <td style="border-style:solid none none none;" colspan="3">
                            現在の勤務地について
                        </td>
                    </tr>
                    <tr>
                        <td style="border-style:none;">
                            @setDdl1(ReadOption, 2, "TransferDutyDepartment_2_2_1", Model.Body.TransferDutyDepartment_2_2_1, KinmuKiboItems)
                        </td>
                    </tr>
                    <tr>
                        <td style="border-style:none;" colspan="3">
                            次の中からその理由を選んでください。(3つ以内で選択し、複数回答の場合は、比重の高い順に選択してください。)
                        </td>
                    </tr>
                    <tr>
                        <td style="border-style:none;vertical-align:top;" rowspan="4">
                            @setCauseDdl(ReadOption, 1, "TransferDutyDepartment_2_2_2_1", Model.Body.TransferDutyDepartment_2_2_2_1, causeItems2)
                            @setCauseDdl(ReadOption, 2, "TransferDutyDepartment_2_2_2_2", Model.Body.TransferDutyDepartment_2_2_2_2, causeItems2)
                            @setCauseDdl(ReadOption, 3, "TransferDutyDepartment_2_2_2_3", Model.Body.TransferDutyDepartment_2_2_2_3, causeItems2)
                        </td>
                        <td style="border-style:none;" colspan="2">
                            通勤に関する理由を選択した場合に通勤時間を入力してください。
                        </td>
                    </tr>
                    <tr>
                        <td style="border-style:none;">
                            @setTimeDdl(ReadOption, 1, "時間", "TransferDutyDepartment_2_2_2_Hour", Model.Body.TransferDutyDepartment_2_2_2_Hour, hourItems)
                        </td>
                        <td style="border-style:none;">
                            @setTimeDdl(ReadOption, 1, "分", "TransferDutyDepartment_2_2_2_Minute", Model.Body.TransferDutyDepartment_2_2_2_Minute, minuteItems)
                        </td>
                    </tr>
                    <tr>
                        <td style="border-style:none;" colspan="2">
                            その他を選んだ場合に入力してください。
                        </td>
                    </tr>
                    <tr>
                        <td style="border-style:none;" colspan="2">
                            @Html.TextAreaFor(m => m.Body.TransferDutyDepartment_2_2_2_Other, attr1)
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <div class="row">
        <div class="col-xs-7">
            <table class="table table-bordered">
                <colgroup>
                    <col style="width:50px;" />
                    <col style="width:50px;" />
                    <col style="width:150px;" />
                </colgroup>
                <thead>
                    <tr class="info">
                        <td colspan="3">
                            (3)上記異動（職務・配置換え）の希望について、該当する項目を選択してください。
                        </td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td style="border-style:none;">
                            職務の異動について
                        </td>
                        @if (radioRead) {
                            @Html.HiddenFor(m => m.Body.TransferDutyDepartment_3_1)
                            var intext = Model.Body.TransferDutyDepartment_3_1 == Move.In ? "●" : "○";
                            var outtext = Model.Body.TransferDutyDepartment_3_1 == Move.Out ? "●" : "○";
                            <td style="border-style:none;">@intext 是非配慮して欲しい</td>
                            <td style="border-style:none;">@outtext できれば配慮して欲しい</td>
                        } else {
                            <td style="border-style:none;">
                                <div>
                                    <label>
                                        @Html.RadioButtonFor(m => m.Body.TransferDutyDepartment_3_1, Move.In, attrRadio3)
                                    </label>
                                    是非配慮して欲しい
                                </div>
                            </td>
                            <td style="border-style:none;">
                                <div>
                                    <label>
                                        @Html.RadioButtonFor(m => m.Body.TransferDutyDepartment_3_1, Move.Out, attrRadio3)
                                    </label>
                                    できれば配慮して欲しい
                                </div>
                            </td>
                        }
                    </tr>
                    <tr>
                        <td style="border-style:none;">
                            勤務地の異動について
                        </td>
                        @if (radioRead) {
                            @Html.HiddenFor(m => m.Body.TransferDutyDepartment_3_2)
                            var intext = Model.Body.TransferDutyDepartment_3_2 == Move.In ? "●" : "○";
                            var outtext = Model.Body.TransferDutyDepartment_3_2 == Move.Out ? "●" : "○";

                            <td style="border-style:none;">@intext 是非配慮して欲しい</td>
                            <td style="border-style:none;">@outtext できれば配慮して欲しい</td>
                        } else {
                            <td style="border-style:none;">
                                <div>
                                    <label>
                                        @Html.RadioButtonFor(m => m.Body.TransferDutyDepartment_3_2, Move.In, attrRadio4)
                                    </label>
                                    是非配慮して欲しい
                                </div>
                            </td>
                            <td style="border-style:none;">
                                <div>
                                    <label>
                                        @Html.RadioButtonFor(m => m.Body.TransferDutyDepartment_3_2, Move.Out, attrRadio4)
                                    </label>
                                    できれば配慮して欲しい
                                </div>
                            </td>
                        }
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <div class="row">
        <div class="col-xs-7">
            <table class="table table-bordered">
                <colgroup>
                    <col style="width:50px;" />
                    <col style="width:100px;" />
                </colgroup>
                <thead>
                    <tr class="info">
                        <td colspan="2">
                            (4) 異動（職務・配置換え）の具体的内容について、希望するものを選択してください。<br>
                        </td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td style="border-style:none ;vertical-align:top;" rowspan="2">
                            @setKinmuchi(ReadOption, 1, "希望1", "TransferDutyDepartment_4_1_1", Model.Body.TransferDutyDepartment_4_1_1, KinmuchiItems)
                            @setKinmuchi(ReadOption, 2, "希望2", "TransferDutyDepartment_4_1_2", Model.Body.TransferDutyDepartment_4_1_2, KinmuchiItems)
                            @setKinmuchi(ReadOption, 3, "希望3", "TransferDutyDepartment_4_1_3", Model.Body.TransferDutyDepartment_4_1_3, KinmuchiItems)
                        </td>
                        <td style="border-style:none ;vertical-align:top">
                            <label style="font-weight:normal;">出向を選んだ場合に入力してください。</label>
                            <div style="margin-top:5px">
                                <label style="font-weight:normal;">出向先&nbsp;</label>@Html.TextAreaFor(m => m.Body.TransferDutyDepartment_4_1_Other, Kinmuchiattr1)
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td style="border-style:none ;vertical-align:top">
                            <label style="font-weight:normal;">支社を選択した場合、勤務場所について選択してください。</label>
                            <div style="margin-top:5px">
                                @setKinmubasho(ReadOption, 1, "TransferDutyDepartment_4_1_Location", Model.Body.TransferDutyDepartment_4_1_Location, ShishaShitenItems)
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td style="border-style:solid none none none ;vertical-align:top" colspan="2">
                            <label style="font-weight:normal;">職務について(それぞれ２つ以内を選択)</label>
                        </td>
                    </tr>
                    <tr>
                        <td style="border-style:none ;vertical-align:top">
                            <label style="font-weight:normal;">　現職の次に希望する職務</label>
                        </td>
                        <td style="border-style:none ;vertical-align:top">
                            <div style="margin-top:5px">
                                @setShokumu1(ReadOption, 1, "TransferDutyDepartment_4_2_1_1", Model.Body.TransferDutyDepartment_4_2_1_1, GyoumuBunruiItems)
                                @setShokumu1(ReadOption, 1, "TransferDutyDepartment_4_2_1_2", Model.Body.TransferDutyDepartment_4_2_1_2, GyoumuBunruiItems)
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td style="border-style:none ;vertical-align:top">
                            <label style="font-weight:normal;">　自分の将来を考え長期的に能力を<br />　発揮していきたい職務</label>
                        </td>
                        <td style="border-style:none ;vertical-align:top">
                            <div style="margin-top:5px">
                                @setShokumu1(ReadOption, 1, "TransferDutyDepartment_4_2_2_1", Model.Body.TransferDutyDepartment_4_2_2_1, GyoumuBunruiItems)
                                @setShokumu1(ReadOption, 1, "TransferDutyDepartment_4_2_2_2", Model.Body.TransferDutyDepartment_4_2_2_2, GyoumuBunruiItems)
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <div class="row">
        <div class="col-xs-7">
            <table class="table table-bordered">
                <thead>
                    <tr class="info">
                        <td class="col-xs-1">
                            (5) 上記（2）の具体的な理由を入力してください。
                        </td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            @Html.TextAreaFor(m => m.Body.TransferDutyDepartment_5, attr2)
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <div class="row">
        <div class="col-xs-7">
            <table class="table table-bordered">
                <thead>
                    <tr class="info">
                        <td class="col-xs-1">
                            (6) 配置換えについて意見があれば具体的に入力してください。
                        </td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            @Html.TextAreaFor(m => m.Body.TransferDutyDepartment_6, attr2)
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>


    <h4 style="margin-top:20px;">3 退職後の生活設計について</h4>
    <h6>（今後、３年以内に定年退職を向える人のみ入力してください。）</h6>
    <!-- 退職後の生活設計について -->
    <div class="row">
        @*定義*@
        <script type="text/javascript">
            $(function () {
                $("form input.SaikoyouRadio").change(function () {
                    if ($(this).val() == "Out") {
                        $("form input.saikoyou-other").removeAttr("readonly");
                    } else {
                        $("form input.saikoyou-other").attr("readonly", "readonly").val("");
                    }
                });
            });
        </script>

        @{
                        //入力モード
                        var Healthattr1 = new Dictionary<string, object>() { { "class", "form-control select-other" }, { "maxlength", "20" }, { "readonly", "readonly" } };
                        var SaikoyouOtherattr = new Dictionary<string, object>() { { "class", " form-control saikoyou-other " }, { "style", "width:150px;height:16px;" }, { "size", "2" }, { "rows", "1" }, { "maxlength", "20" }, { "readonly", "readonly" } };

                        //ラジオ
                        var attrSaikoyouRadio = new Dictionary<string, object>() { { "id", "saikoyou-radio" }, { "class", "SaikoyouRadio" } };
                        var attrSaikoyouRadio1 = new Dictionary<string, object>() { { "id", "in-radio" } };
                        var attrSaikoyouRadio2 = new Dictionary<string, object>() { { "id", "out-radio" } };


                        switch (Model.Head.InputMode) {
                                    case SelfDeclareMode.DSelfSign:

                                //設定本人・面談者時
                                //計画・方針入力化
                                Healthattr1.Remove("readonly");

                                if (Model.Body.RetirementLifePlan_1_1 == Move.Out) {
                                    SaikoyouOtherattr.Remove("readonly");
                                }

                                break;
                            default:
                                //上記以外 ReadOnly
                                break;
                        }

                        //健康状態リスト
                        var HealthItems = new SelectListItem[] {
              new SelectListItem() { Value="1：原 竜太", Text="上司：　　　　原 竜太" },
              new SelectListItem() { Value="1：外村 順一", Text="人事担当課長：外村 順一" },
              new SelectListItem() { Value="2：横田 博司", Text="人事担当部長：横田 博司" },
              new SelectListItem() { Value="3：横山 和彦", Text="支社長：　　　横山 和彦"}
            };

            @helper setHealthDdl1(bool isRead, int cnt, string name, string value, SelectListItem[] selItems) {
                <div class="h24">
                    @{
                        var id = string.Format("Body.{0}", name);
                        if (isRead) {
                            @Html.TextBox(id, value, new { @class = "form-control", @readonly = "readonly" })
                        } else {
                            @Html.DropDownList(id, new SelectList((IEnumerable<SelectListItem>)selItems, "Value", "Text", value), "", new { @class = "prefecture", style = "width: 200px; vertical-align:top;" })
                        }
                    }
                </div>
}
            @helper setHealthDdl2(bool isRead, int cnt, string name, string value, SelectListItem[] selItems) {
                <div class="h24">
                    @{
                        var id = string.Format("Body.{0}", name);
                        if (isRead) {
                            @Html.TextBox(id, value, new { @class = "form-control", @readonly = "readonly" })
                        } else {
                            @Html.DropDownList(id, new SelectList((IEnumerable<SelectListItem>)selItems, "Value", "Text", value), "", new { @class = "ward", style = "width: 50px; vertical-align:top;" })
                        }
                    }
                </div>
}
        }

        <div class="col-xs-5">
            <table class="table table-bordered" vertical-align="top">
                <colgroup>
                    <col style="width:50px;" />
                    <col style="width:100px;" />
                </colgroup>
                <thead>
                    <tr class="info">
                        <td colspan="2">
                            （1）再雇用希望の有無を選択してください。
                        </td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td style="border-style:none;vertical-align:top;">
                            @if (radioRead) {
                                @Html.HiddenFor(m => m.Body.RetirementLifePlan_1_1)
                                var intext = Model.Body.RetirementLifePlan_1_1 == Move.In ? "●" : "○";
                                var outtext = Model.Body.RetirementLifePlan_1_1 == Move.Out ? "●" : "○";
                                <div>@intext 再雇用を希望しない</div>
                                <div>@outtext 再雇用を希望する</div>
                            } else {
                                <div>
                                    <label>
                                        @Html.RadioButtonFor(m => m.Body.RetirementLifePlan_1_1, Move.In, attrSaikoyouRadio)
                                    </label>
                                    再雇用を希望しない
                                </div>
                                <div>
                                    <label>
                                        @Html.RadioButtonFor(m => m.Body.RetirementLifePlan_1_1, Move.Out, attrSaikoyouRadio)
                                    </label>
                                    再雇用を希望する
                                </div>
                            }
                        </td>
                        <td style="border-style:none;">
                            <div class="h24 form-inline"></div>
                            <div class="h24 form-inline">
                                <label class="w20" style="vertical-align: top;font-weight:normal;">希望職種1</label>
                                @Html.TextBoxFor(m => m.Body.RetirementLifePlan_1_2_1, SaikoyouOtherattr)
                            </div>
                            <div class="h24 form-inline">
                                <label class="w20" style="vertical-align: top;font-weight:normal;">希望職種2</label>
                                @Html.TextBoxFor(m => m.Body.RetirementLifePlan_1_2_2, SaikoyouOtherattr)
                            </div>
                            <div class="h24 form-inline">
                                <label class="w20" style="vertical-align: top;font-weight:normal;">希望職種3</label>
                                @Html.TextBoxFor(m => m.Body.RetirementLifePlan_1_2_3, SaikoyouOtherattr)
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <div class="row">
        <div class="col-xs-7">
            <table class="table table-bordered">
                <thead>
                    <tr class="info">
                        <td class="col-xs-1">
                            (2) 再雇用における具体的な要望・意見があれば入力してください。
                        </td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            @Html.TextAreaFor(m => m.Body.RetirementLifePlan_2, attr2)
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
    <div class="row">
        <div class="col-xs-7">
            <table class="table table-bordered">
                <thead>
                    <tr class="info">
                        <td class="col-xs-1">
                            (3) 退職後の生活設計について、具体的な要望・考え・意見があれば入力してください。
                        </td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            @Html.TextAreaFor(m => m.Body.RetirementLifePlan_3, attr2)
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>


    <h4 style="margin-top:20px;">4 その他の要望・意見</h4>
    <!-- 退職後の生活設計について -->
    <div class="row">
        @*定義*@
        @{
                            //入力モード
                            var attr3 = new Dictionary<string, object>() { { "class", "form-control" }, { "rows", "10" }, { "maxlength", "1000" }, { "readonly", "readonly" } };

                            switch (Model.Head.InputMode) {
                                        case SelfDeclareMode.DSelfSign:

                                    //設定本人・面談者時
                                    //計画・方針入力化
                                    attr3.Remove("readonly");
                                    break;
                                default:
                                    //上記以外 ReadOnly
                                    break;
                            }
        }
        <div class="col-xs-7">
            <table class="table table-bordered">
                <thead>
                    <tr class="info">
                        <td>
                            上記以外で、会社に直接伝えたい具体的な事項があれば入力してください。<br />
                            会社に知っておいて欲しい個人事情、又は業務遂行上、あるいは都市機構の職員、協力会社との関係等で<br />
                            なにか気になることについてもここに入力してください。
                        </td>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            @Html.TextAreaFor(m => m.Body.FreeComment, attr3)
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    @*隠しボタンエリア*@
    <div style="height:0px;">
        <button type="submit" name="Save" id="savebutton" value="保存" class="btn invisible">保存</button>
        <button type="submit" name="Save2Print" id="save2printbutton" value="保存PDF出力" class="btn invisible">保存PDF出力</button>

        <button type="submit" name="Signature" id="21" value="2,1" class="btn invisible">本人</button>
        <button type="submit" name="Signature" id="22" value="2,2" class="btn invisible">人事担当部長</button>

        <button type="submit" name="SignCancel" id="c21" value="2,1" class="btn invisible">本人</button>
        <button type="submit" name="SignCancel" id="c22" value="2,2" class="btn invisible">人事担当部長</button>
    </div>

    @Scripts.Render("~/Scripts/js/selfdec")

}
