@using EmployeeAdjustmentConnectionSystem.COM.Util.Convert
@using EmployeeAdjustmentConnectionSystem.COM.Enum
@using EmployeeAdjustmentConnectionSystem.COM.Models
@model ObjectivesManagementViewModels
@{
  ViewBag.Title = "目標管理入力";
  //ウエイトドロップダウン用
  var weitItems = new SelectListItem[] {new SelectListItem() { Value="10", Text="10" },
                                        new SelectListItem() { Value="15", Text="15" },
                                        new SelectListItem() { Value="20", Text="20" },
                                        new SelectListItem() { Value="25", Text="25" },
                                        new SelectListItem() { Value="30", Text="30" },
                                        new SelectListItem() { Value="35", Text="35" },
                                        new SelectListItem() { Value="40", Text="40" }};
  var achvItems = new SelectListItem[] {new SelectListItem() { Value="1.3", Text="1.3" },
                                        new SelectListItem() { Value="1.0", Text="1.0" },
                                        new SelectListItem() { Value="0.8", Text="0.8" },
                                        new SelectListItem() { Value="0.5", Text="0.5" }};
}
@Styles.Render("~/Content/css/obj")

<!--タイトル-->
@using(Html.BeginForm("Index", "ObjectivesManagement", null, FormMethod.Post, new { @class = "form-horizontal" })) {
  <h4 class="text-center">@Html.DisplayFor(m => m.Head.JcalYear) 年度　目標管理シート @Html.DisplayFor(m => m.Head.HeaderString)</h4>
  @Html.HiddenFor(m => m.Head.ManageNo)
  @Html.HiddenFor(m => m.Head.JcalYear)
  @Html.HiddenFor(m => m.Head.IsRireki)
  @Html.HiddenFor(m => m.Head.DbArea)
  @Html.HiddenFor(m => m.Head.CompetencyNo)
  @Html.HiddenFor(m => m.Head.InputMode)
  @Html.HiddenFor(m => m.Head.AuthButton)
  @Html.HiddenFor(m => m.Head.CancelButton)

  <!-- ヘッダ -->
  <div class="row">
    <!--名前、社員番号等-->
    <div class="col-xs-8">
      <table class="table table-bordered">
        <tbody>
          <tr class="h34">
            <td class="info w40">氏名</td>
            <td class="w150">@Html.DisplayFor(m => m.Head.Name)</td>
            <td class="info w60">社員番号</td>
            <td class="w60">@Html.DisplayFor(m => m.Head.EmployeeNo)</td>
            <td class="info w40">所属</td>
            <td>@Html.DisplayFor(m => m.Head.Department)</td>
            <td class="info w40">役職</td>
            <td class="w150">@Html.DisplayFor(m => m.Head.Post)</td>
            <td class="info w40">資格</td>
            <td class="w60">@Html.DisplayFor(m => m.Head.Competency)</td>
          </tr>
        </tbody>
      </table>
    </div>
    <!--異動-->
    <div class="col-xs-4">
      @{
  //人事異動入力モード
  //異動日
  var ymdRead1 = "";
  var ymdBtn1 = "hidden";
  //ラジオ
  var attr1 = new Dictionary<string, object>() { { "id", "in-radio" } };
  var attr2 = new Dictionary<string, object>() { { "id", "out-radio" } };
  var radioRead = true;

  switch(Model.Head.InputMode) {
    case ObjMode.AchvSelfSign:
    case ObjMode.AchvInterviewSign:
      //達成本人・面談者時
      //日付背景変更、ボタン表示、ラジオ解除
      ymdRead1 = "fm-ctr-rdonly";
      ymdBtn1 = "";
      radioRead = false;
      break;
    default:
      //上記以外 ReadOnly
      break;
  }
      }
      <table class="table table-bordered">
        <tbody>
          <tr>
            <td class="info w90">期中の人事異動</td>
            <td>
              <table class="table table-no-bordered mb-zero">
                <tbody>
                  <tr>
                    <td class="w120">
                      @Html.TextBoxFor(m => m.Head.TransferYear, new { @class = "form-control " + @ymdRead1, size = "10", maxlength = "10", @readonly = "readonly" })
                    </td>
                    <td class="w5"></td>
                    <td>
                      <button type="button" class="btn btn-default btn-xs @ymdBtn1" id="moveCancel" value="Head_TransferYear"><i class="glyphicon glyphicon-remove"></i></button>
                    </td>
                    @if(radioRead) {
                      @Html.HiddenFor(m => m.Head.MoveInOut)
                      var intext = Model.Head.MoveInOut == Move.In ? "●" : "○";
                      var outtext = Model.Head.MoveInOut == Move.Out ? "●" : "○";

                      <td class="w50">@intext 転入</td>
                      <td class="w50">@outtext 転出</td>
                    } else {
                      <td class="w50">
                        <label>
                          @Html.RadioButtonFor(m => m.Head.MoveInOut, Move.In, attr1)
                          転入
                        </label>
                      </td>
                      <td class="w50">
                        <label>
                          @Html.RadioButtonFor(m => m.Head.MoveInOut, Move.Out, attr2)
                          転出
                        </label>
                      </td>
                    }
                  </tr>
                </tbody>
              </table>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
  <!--承認等-->
  <div class="row">
    <!--面談の印鑑-->
    <div class="col-xs-12">
      <table class="table table-bordered">
        <thead>
          <tr class="info">
            <th colspan="4" height="10">目標設定面談　所属</th>
            <th colspan="4" height="10">達成度評価面談　所属</th>
            <th colspan="4" height="10">達成度評価面談　支社・本社</th>
          </tr>
        </thead>
        <tbody>
          @*承認ボタンヘルパー*@
          @helper setButton(ObjMode auth, ObjMode mode, string name, string value) {
            @Html.Raw("<td>")
            if(auth == mode) {
              var dmyId = "dmy" + value;
              <button type="button" name="Signature" id="@dmyId" value="@value" class="btn-default btn-xs">@name</button>
            } else {
              @name
            }
            @Html.Raw("</td>")
          }
          <tr class="info">
            @setButton(Model.Head.AuthButton, ObjMode.ObjSelfSign, "本人", "111")
            @setButton(Model.Head.AuthButton, ObjMode.ObjInterviewSign, "面談者", "112")
            @setButton(Model.Head.AuthButton, ObjMode.ObjInterviewHighSign, "面談の上位者", "113")
            @setButton(Model.Head.AuthButton, ObjMode.ObjManagerSign, "部長・支店長", "114")
            @setButton(Model.Head.AuthButton, ObjMode.AchvSelfSign, "本人", "211")
            @setButton(Model.Head.AuthButton, ObjMode.AchvInterviewSign, "面談者", "212")
            @setButton(Model.Head.AuthButton, ObjMode.AchvInterviewHighSign, "面談の上位者", "213")
            @setButton(Model.Head.AuthButton, ObjMode.AchvManagerSign, "部長・支店長", "214")
            @setButton(Model.Head.AuthButton, ObjMode.AchvHumanResourceSign, "人事担当課長", "221")
            @setButton(Model.Head.AuthButton, ObjMode.AchvEtcSign, "　　　　　　", "222")
            @setButton(Model.Head.AuthButton, ObjMode.AchvGeneralAffairsSign, "総務部長", "223")
            @setButton(Model.Head.AuthButton, ObjMode.AchvExecutiveSign, "支社長・担当役員", "224")
          </tr>
          @*CancelButtonヘルパー*@
          @helper setCancelButton(string name, ObjMode cancel, ObjMode mode, string value) {
            @Html.Raw("<td>")
            @Html.Raw(name)
            if(cancel == mode) {
              var dmycId = "dmyc" + value;
              var dmycValue = "c" + value;
              <button type="button" class="btn btn-default btn-xs" name="SignCancel" id="@dmycId" value="@dmycValue"><i class="glyphicon glyphicon-remove"></i></button>
            }
            @Html.Raw("</td>")
          }
          <tr class="h24">
            @setCancelButton(Model.Head.ObjSelfSign, Model.Head.CancelButton, ObjMode.ObjSelfSign, "111")
            @setCancelButton(Model.Head.ObjInterviewSign, Model.Head.CancelButton, ObjMode.ObjInterviewSign, "112")
            @setCancelButton(Model.Head.ObjInterviewHighSign, Model.Head.CancelButton, ObjMode.ObjInterviewHighSign, "113")
            @setCancelButton(Model.Head.ObjManagerSign, Model.Head.CancelButton, ObjMode.ObjManagerSign, "114")
            @setCancelButton(Model.Head.AchvSelfSign, Model.Head.CancelButton, ObjMode.AchvSelfSign, "211")
            @setCancelButton(Model.Head.AchvInterviewSign, Model.Head.CancelButton, ObjMode.AchvInterviewSign, "212")
            @setCancelButton(Model.Head.AchvInterviewHighSign, Model.Head.CancelButton, ObjMode.AchvInterviewHighSign, "213")
            @setCancelButton(Model.Head.AchvManagerSign, Model.Head.CancelButton, ObjMode.AchvManagerSign, "214")
            @setCancelButton(Model.Head.AchvHumanResourceSign, Model.Head.CancelButton, ObjMode.AchvHumanResourceSign, "221")
            @setCancelButton(Model.Head.AchvEtcSign, Model.Head.CancelButton, ObjMode.AchvEtcSign, "222")
            @setCancelButton(Model.Head.AchvGeneralAffairsSign, Model.Head.CancelButton, ObjMode.AchvGeneralAffairsSign, "223")
            @setCancelButton(Model.Head.AchvExecutiveSign, Model.Head.CancelButton, ObjMode.AchvExecutiveSign, "224")
          </tr>
        </tbody>
      </table>
    </div>
  </div>
  <!--ボタンエリア-->
  <div class="row">
    <!--ボタン-->
    <div class="col-xs-2">
      <button type="button" name="DmySave" value="途中保存" class="btn-default pull-left" style="margin:0 5px 10px 0;" id="dmysave">途中保存</button>
      <button type="submit" name="Back" value="戻る" class="btn-default pull-left" id="backbutton" style="margin-left:5px;">戻る</button>
    </div>
    <div class="col-xs-10">
      &#9632;目標入力を途中で中断する際は途中保存ボタンで保存して下さい、目標設定・達成度面談の承認については該当するボタンを押下して下さい。<br />
      &#9632;戻るボタンを押下するとTOPへ戻ります。
    </div>
  </div>
  <!-- 方針 -->
  <div class="row">
    <div class="col-xs-8">
      @{
              //方針入力モード
              //計画・方針
              attr1 = new Dictionary<string, object>() { { "class", "form-control" }, { "rows", "6" }, { "maxlength", "500" }, { "readonly", "readonly" } };
              switch(Model.Head.InputMode) {
                case ObjMode.ObjSelfSign:
                case ObjMode.ObjInterviewSign:
                  //設定本人・面談者時
                  //計画・方針入力化
                  attr1.Remove("readonly");
                  break;
                default:
                  //上記以外 ReadOnly
                  break;
              }
      }
      <table class="table table-bordered">
        <tbody>
          <tr>
            <td>
              会社経営計画(担当業務関連)
              @Html.TextAreaFor(m => m.Head.BusinessPlanning, attr1)
            </td>
            <td>
              所属部門の方針・目標
              @Html.TextAreaFor(m => m.Head.DepartmentPolicy, attr1)
            </td>
          </tr>
        </tbody>
      </table>
    </div>
    <!--面談の日付-->
    <div class="col-xs-4">
      @{
              //面談入力モード
              //設定面談日
              ymdRead1 = "";
              ymdBtn1 = "hidden";
              //達成面談日
              var ymdRead2 = "";
              var ymdBtn2 = "hidden";
              //面談者
              attr1 = new Dictionary<string, object>() { { "class", "form-control" }, { "readonly", "readonly" } };
              attr2 = new Dictionary<string, object>() { { "class", "form-control" }, { "readonly", "readonly" } };

              switch(Model.Head.InputMode) {
                case ObjMode.ObjInterviewSign:
                  //設定面談時
                  //設定日付、ボタン、面談者入力化
                  ymdRead1 = "fm-ctr-rdonly";
                  ymdBtn1 = "";
                  attr1.Remove("readonly");
                  break;
                case ObjMode.AchvInterviewSign:
                  //達成面談時
                  //達成日付、ボタン、面談者入力化
                  ymdRead2 = "fm-ctr-rdonly";
                  ymdBtn2 = "";
                  attr2.Remove("readonly");
                  break;
                default:
                  //上記以外
                  break;
              }
      }
      <table class="table table-bordered">
        <colgroup>
          <col style="width:45px;" />
          <col />
          <col style="width:45px;" />
          <col />
        </colgroup>
        <thead>
          <tr class="info">
            <th colspan="2" height="10">面談　目標設定</th>
            <th colspan="2" height="10">面談　達成度評価</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td class="info">実施日</td>
            <td>
              <table class="table table-no-bordered mb-zero">
                <tbody>
                  <tr>
                    <td class="w120">
                      @Html.TextBoxFor(m => m.Head.ObjYear, new { @class = "form-control " + @ymdRead1, size = "10", maxlength = "10", @readonly = "readonly" })
                    </td>
                    <td class="w5"></td>
                    <td>
                      <button type="button" class="btn btn-default btn-xs @ymdBtn1" id="objCancel" value="Head_ObjYear"><i class="glyphicon glyphicon-remove"></i></button>
                    </td>
                    <td></td>
                  </tr>
                </tbody>
              </table>
            </td>
            <td class="info">実施日</td>
            <td>
              <table class="table table-no-bordered mb-zero">
                <tbody>
                  <tr>
                    <td class="w120">
                      @Html.TextBoxFor(m => m.Head.AchvYear, new { @class = "form-control " + @ymdRead2, size = "10", maxlength = "10", @readonly = "readonly" })
                    </td>
                    <td class="w5"></td>
                    <td>
                      <button type="button" class="btn btn-default btn-xs @ymdBtn2" id="achvCancel" value="Head_AchvYear"><i class="glyphicon glyphicon-remove"></i></button>
                    </td>
                    <td></td>
                  </tr>
                </tbody>
              </table>
            </td>
          </tr>
          <tr>
            <td class="info">面談者</td>
            <td>
              @Html.TextBoxFor(m => m.Head.ObjInterviewer, attr1)
            </td>
            <td class="info">面談者</td>
            <td>
              @Html.TextBoxFor(m => m.Head.AchvInterviewer, attr2)
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
  <!-- 目標入力項目 -->
  <div class="row">
    <div class="col-xs-12">
      @{
              //目標入力
              //目標～評価
              attr1 = new Dictionary<string, object>() { { "class", "form-control" }, { "rows", "6" }, { "maxlength", "500" }, { "readonly", "readonly" } };
              attr2 = new Dictionary<string, object>() { { "class", "form-control" }, { "rows", "2" }, { "maxlength", "500" }, { "readonly", "readonly" } };
              //ウェイト
              var waitRead1 = true;
              var waitRead2 = true;
              //評価日
              ymdRead1 = "";
              ymdBtn1 = "hidden";
              //コメント
              var comattr1 = new Dictionary<string, object>() { { "class", "form-control" }, { "rows", "6" }, { "maxlength", "500" }, { "readonly", "readonly" } };
              var comattr2 = new Dictionary<string, object>() { { "class", "form-control" }, { "rows", "6" }, { "maxlength", "500" }, { "readonly", "readonly" } };
              //達成度
              var achvRead1 = true;
              var achvRead2 = true;
              //プロセス
              var proRead1 = true;
              var proRead2 = true;

              var isLowComNo = DataConv.Str2Int(Model.Head.CompetencyNo, 20) > 15 ? true : false;
              radioRead = true;
              
              switch(Model.Head.InputMode) {
                case ObjMode.ObjSelfSign:
                  //設定本人
                  //目標項目～評価基準、本人ウェイト入力化
                  attr1.Remove("readonly");
                  attr2.Remove("readonly");
                  waitRead1 = false;
                  radioRead = false;
                  break;
                case ObjMode.ObjInterviewSign:
                  //設定面談者
                  attr1.Remove("readonly");
                  attr2.Remove("readonly");
                  waitRead1 = false;
                  waitRead2 = false;
                  radioRead = false;
                  break;
                case ObjMode.AchvSelfSign:
                  //達成本人
                  ymdRead1 = "fm-ctr-rdonly";
                  ymdBtn1 = "";
                  comattr1.Remove("readonly");
                  achvRead1 = false;
                  proRead1 = false;
                  break;
                case ObjMode.AchvInterviewSign:
                  //達成面談者
                  comattr2.Remove("readonly");
                  achvRead2 = false;
                  proRead2 = false;
                  break;
                default:
                  //上記以外 ReadOnly
                  break;
              }
      }
      <table class="table table-bordered obj-table">
        <colgroup>
          <col style="width:50px" />
          <col />
          <col />
          <col />
          <col style="width:120px" />
          <col style="width:60px" />
          <col style="width:90px" />
          <col style="width:60px" />
          <col style="width:90px" />
          <col style="width:60px" />
          <col style="width:10px" />
          <col style="width:60px" />
        </colgroup>
        <thead>
          <tr class="info">
            <th height="45px">区分</th>
            <th>目標項目<br><small>(何をやるか)</small></th>
            <th>達成水準・期限<br><small>(どれだけ、いつまでに)</small></th>
            <th>目標達成のための施策・手段<br><small>(プロセス)</small></th>
            <th>評価基準</th>
            <th>ウエイト</th>
            <th colspan="2">
              <table class="table table-no-bordered mb-zero">
                <tbody class="bg-info">
                  <tr><td>本人評価(評価日)</td></tr>
                  <tr>
                    <td>
                      <table class="table table-no-bordered mb-zero">
                        <tbody class="bg-info">
                          <tr>
                            @*<td width="40px">
                              <small>評価日:</small>
                            </td>*@
                            <td class="w100">
                              @Html.TextBoxFor(m => m.Head.SelfEvalMonth, new { @class = "form-control " + ymdRead1, size = "12", maxlength = "10", @readonly = "readonly" })
                            </td>
                            <td class="w5"></td>
                            <td>
                              <button type="button" class="btn btn-default btn-xs @ymdBtn1"><i class="glyphicon glyphicon-remove"></i></button>
                            </td>
                          </tr>
                        </tbody>
                      </table>
                    </td>
                  </tr>
                </tbody>
              </table>
            </th>
            <th colspan="2">上司評価</th>
            <th></th>
            <th>評価点</th>
          </tr>
        </thead>
        <tbody>
          @if(Model != null && Model.ObjList != null) {
            //DropDownヘルパー
            @helper setDdl(bool isRead, int cnt, string title, string name, string value, SelectListItem[] selItems) {
              <div class="form-group-custom">
              <label for="hon"><small>@title</small></label>
              @{
                var id = string.Format("ObjList[{0}].{1}", cnt, name);
                if(isRead) {
                  @Html.TextBox(id, value, new { @class = "form-control", @readonly = "readonly" })
                } else {
                  @Html.DropDownList(id, new SelectList((IEnumerable<SelectListItem>)selItems, "Value", "Text", value), "", "")
                }
              }
              </div>
            }
            //テキストエリアヘルパー
            @helper setTxa(int cnt, string title, string name, string value, Dictionary<string,object> attr) {
              <div class="form-group-custom">
                <label for="inpta"><small>@title</small></label>
                @Html.TextArea(string.Format("ObjList[{0}].{1}", cnt, name), value, attr)
              </div>
            }

            for(int i = 0; i < Model.ObjList.Count; i++) {
              <tr>
                <td rowspan="2">
                  <p>@Html.DisplayFor(m => Model.ObjList[i].AreaNo) @Html.HiddenFor(m => Model.ObjList[i].AreaNo)</p>
                  <div>
                    @if(isLowComNo) {
                      @Html.HiddenFor(m => Model.ObjList[i].AreaSel)
                    } else {
                      if(radioRead) {
                        @Html.HiddenFor(m => Model.ObjList[i].AreaSel)
                        var etext = Model.ObjList[i].AreaSel == Area.Executive ? "●" : "○";
                        var wtext = Model.ObjList[i].AreaSel == Area.Work ? "●" : "○";
                        <label>@etext 経営</label>
                        <label>@wtext 業務</label>
                      } else {
                          <label>
                            @Html.RadioButtonFor(m => Model.ObjList[i].AreaSel, Area.Executive, new { @id = "ex-radio" + Model.ObjList[i].AreaNo })
                            経営
                          </label>
                          <label>
                            @Html.RadioButtonFor(m => Model.ObjList[i].AreaSel, Area.Work, new { @id = "wk-radio" + Model.ObjList[i].AreaNo })
                            業務
                          </label>
                      }
                    }
                  </div>
                </td>
                <td rowspan="2">
                  @Html.TextAreaFor(m => Model.ObjList[i].ObjItem, attr1)
                </td>
                <td rowspan="2">
                  @Html.TextAreaFor(m => Model.ObjList[i].AchvLevel, attr1)
                </td>
                <td rowspan="2">
                  @Html.TextAreaFor(m => Model.ObjList[i].ObjPolicys, attr1)
                </td>
                <td>
                  @setTxa(i, "大幅達成", "BestMetrics", Model.ObjList[i].BestMetrics, attr2)
                </td>
                <td>
                  @setDdl(waitRead1, i, "本人(%)", "SelfWeight", Model.ObjList[i].SelfWeight, weitItems)
                </td>
                <td rowspan="2">
                  @setTxa(i, "コメント", "SelfComment", Model.ObjList[i].SelfComment, comattr1)
                </td>
                <td>
                  @setDdl(achvRead1, i, "達成度", "SelfAchv", Model.ObjList[i].SelfAchv, achvItems)
                </td>
                <td rowspan="2">
                  @setTxa(i, "コメント", "BossComment", Model.ObjList[i].BossComment, comattr2)
                </td>
                <td>
                  @setDdl(achvRead2, i, "達成度", "BossAchv", Model.ObjList[i].BossAchv, achvItems)
                </td>
                <td></td>
                <td>
                  <div class="form-group-custom">
                    <label for="hon"><small>達成度</small></label>
                    @Html.TextBoxFor(m => Model.ObjList[i].AchvTotal, new { @class = "form-control ime-disabled", size = "2", maxlength = "3", @readonly = true })
                  </div>
                </td>
              </tr>
              <tr>
                <td>
                  @setTxa(i, "達成", "BetterMetrics", Model.ObjList[i].BetterMetrics, attr2)
                </td>
                <td>
                  @setDdl(waitRead2, i, "上司(%)", "BossWeight", Model.ObjList[i].BossWeight, weitItems)
                </td>
                <td>
                  @setDdl(proRead1, i, "プロセス", "SelfProcess", Model.ObjList[i].SelfProcess, achvItems)
                </td>
                <td>
                  @setDdl(proRead2, i, "プロセス", "BossProcess", Model.ObjList[i].BossProcess, achvItems)
                </td>
                <td></td>
                <td>
                  <div class="form-group-custom">
                    <label for="hon"><small>プロセス</small></label>
                    @Html.TextBoxFor(m => Model.ObjList[i].ProcessTotal, new { @class = "form-control ime-disabled", size = "2", maxlength = "3", @readonly = true })
                  </div>
                </td>
              </tr>
            }
          }
        </tbody>
      </table>
    </div>
  </div>
  <!--注意書き等-->
  <div class="row">
    <!--算出方法-->
    <div class="col-xs-9">
      <table class="table table-no-bordered mb-zero">
        <tbody>
          <tr>
            <td>※評価点の算出方法</td>
            <td>(計算例)</td>
          </tr>
          <tr>
            <td>ウェイト(上司)×達成度評価ポイント(上司評価)＝達成度評価点</td>
            <td>ウェイト(30％)×達成度評価ポイント(0.8)＝達成度評価点　24点</td>
          </tr>
          <tr>
            <td>ウェイト(上司)×プロセス評価ポイント(上司評価)＝プロセス評価点</td>
            <td>ウェイト(40%)×プロセス評価ポイント(1.3)＝プロセス評価点　52点</td>
          </tr>
        </tbody>
      </table>
    </div>
    <!--合計-->
    <div class="col-xs-3">
      <table class="table table-bordered obj-table">

        <tbody>
          <tr class="h34">
            <td class="info w40">評価点<br>合計</td>
            <td class="w80">
              <div class="form-group-custom">
                <label for="hon"><small>達成度</small></label>
                @Html.TextBoxFor(m => Model.Head.AchvTotal, new { @class = "form-control", size = "2", maxlength = "5", @readonly = true })
              </div>
            </td>
            <td class="w80">
              <div class="form-group-custom">
                <label for="hon"><small>プロセス</small></label>
                @Html.TextBoxFor(m => Model.Head.ProcessTotal, new { @class = "form-control", size = "2", maxlength = "5", @readonly = true })
              </div>
            </td>
            <td>
              <div class="form-group-custom">
                <label for="hon"><small>目標達成度判定点</small></label>
                @Html.TextBoxFor(m => Model.Head.DecisionPoint, new { @class = "form-control", size = "2", maxlength = "5", @readonly = true })
              </div>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>

  @*隠しボタンエリア*@
  <div style="height:0px;">
    <button type="submit" name="Save" id="savebutton" value="保存" class="btn invisible">保存</button>
    <button type="submit" name="Save2Print" id="save2printbutton" value="保存PDF出力" class="btn invisible">保存PDF出力</button>

    <button type="submit" name="Signature" id="111" value="1,1,1" class="btn invisible">本人</button>
    <button type="submit" name="Signature" id="112" value="1,1,2" class="btn invisible">面談者</button>
    <button type="submit" name="Signature" id="113" value="1,1,3" class="btn invisible">面談の上位者</button>
    <button type="submit" name="Signature" id="114" value="1,1,4" class="btn invisible">部長・支店長</button>
    <button type="submit" name="Signature" id="211" value="2,1,1" class="btn invisible">本人</button>
    <button type="submit" name="Signature" id="212" value="2,1,2" class="btn invisible">面談者</button>
    <button type="submit" name="Signature" id="213" value="2,1,3" class="btn invisible">面談の上位者</button>
    <button type="submit" name="Signature" id="214" value="2,1,4" class="btn invisible">部長・支店長</button>
    <button type="submit" name="Signature" id="221" value="2,2,1" class="btn invisible">人事担当課長</button>
    <button type="submit" name="Signature" id="223" value="2,2,3" class="btn invisible">総務部長</button>
    <button type="submit" name="Signature" id="224" value="2,2,4" class="btn invisible">支社長・担当役員</button>

    <button type="submit" name="SignCancel" id="c111" value="1,1,1" class="btn invisible">本人</button>
    <button type="submit" name="SignCancel" id="c112" value="1,1,2" class="btn invisible">面談者</button>
    <button type="submit" name="SignCancel" id="c113" value="1,1,3" class="btn invisible">面談の上位者</button>
    <button type="submit" name="SignCancel" id="c114" value="1,1,4" class="btn invisible">部長・支店長</button>
    <button type="submit" name="SignCancel" id="c211" value="2,1,1" class="btn invisible">本人</button>
    <button type="submit" name="SignCancel" id="c212" value="2,1,2" class="btn invisible">面談者</button>
    <button type="submit" name="SignCancel" id="c213" value="2,1,3" class="btn invisible">面談の上位者</button>
    <button type="submit" name="SignCancel" id="c214" value="2,1,4" class="btn invisible">部長・支店長</button>
    <button type="submit" name="SignCancel" id="c221" value="2,2,1" class="btn invisible">人事担当課長</button>
    <button type="submit" name="SignCancel" id="c223" value="2,2,3" class="btn invisible">総務部長</button>
    <button type="submit" name="SignCancel" id="c224" value="2,2,4" class="btn invisible">支社長・担当役員</button>
  </div>

  @Scripts.Render("~/Scripts/js/obj")

}