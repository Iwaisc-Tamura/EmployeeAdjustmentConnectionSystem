@using SkillDiscriminantSystem.COM.Models
@using SkillDiscriminantSystem.COM.Entity.Session
@using SkillDiscriminantSystem.COM.Enum
@model SystemManagementModels
@*@Model PasswordReset*@

@{
  ViewBag.Title = "システム管理";

  var lu = (LoginUser)HttpContext.Current.Session["LoginUser"];
  List<SelectListItem> commitList = new List<SelectListItem>() { new SelectListItem() { Value = ((int)lu.Permission).ToString(), Text = "支社確定" } };
    
  var disabledVal = "";
  if(lu.IsRootUser) { 
    commitList.Add(new SelectListItem() { Value = "All", Text = "全体確定" });
  } else { 
    disabledVal = "disabled=\"disabled\""; 
  };  
}
<!--タイトル-->
<h4 class="text-center">システム管理</h4>
@* 2017-04-30 sbc-sagara upd str ファイルアップロード,CSV出力追加 *@
@*using(Html.BeginForm("Management", "SystemManagement", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-inline" })) {*@
@using(Html.BeginForm("Management", "SystemManagement", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-inline" , enctype = "multipart/form-data" })) {
@* 2017-04-30 sbc-sagara upd end ファイルアップロード,CSV出力追加 *@
  @Html.AntiForgeryToken()
  <div class="col-xs-12 top10">
    @if (((LoginUser)Session["LoginUser"]).SYS管理初期処理 == "1") { @* 2017-03-31 sbc-sagara add 支社管理機能追加 *@
    <div class="col-xs-offset-2 col-xs-8">
      @Html.ValidationSummary(true, "", new { @class = "text-danger" })
      <div class="well-ex">
        <div class="well-ex-header">
          <h4>初期データ一括作成</h4>
        </div>
        <div class="well-ex-content">
          <div class="row">
            <div class="col-xs-2">
              <div class="form-group form-group-custom-rg-mg">
                <label class="control-label form-inline">対象</label>
                <div>
                  @Html.DropDownListFor(
                      m => m.BulkType,
                      new SelectListItem[] {
                        new SelectListItem() { Value="Objective", Text="目標管理" },
                        new SelectListItem() { Value="Skill", Text="職能職務" }
                      },
                      "",
                      new Dictionary<string, object> {
                         { "data-width", "50px"}
                        ,{ "title", ""}
                      }
                    )
                </div>
              </div>
            </div>
            <div class="col-xs-2">
              <div class="form-group form-group-custom-rg-mg">
                <table>
                  <tr>
                    <td>
                      <label class="control-label ">西暦</label>
                      <div>
                        @Html.TextBoxFor(m => m.BulkYear, new { name = "BulkYear", @class = " ime-disabled", size = "4", maxlength = "4" })
                      </div>
                    </td>
                    <td class="w30 td-padding">
                      <label>年度</label>
                    </td>
                  </tr>
                </table>
              </div>
            </div>
            <!--2016-01-21 iwai-tamura upd str-->
            <div class="col-xs-2">
            <!--
            <div class="col-xs-1">
            -->
            <!--2016-01-21 iwai-tamura upd end-->
                <div>
                    <label class="control-label form-inline">期間</label>
                    <div>
                        <!--2016-01-21 iwai-tamura upd str-->
                        <!--期区分を逆に設定-->
                        @Html.DropDownListFor(
                            m => m.BulkDuration,
                            new SelectListItem[] {

                            //2016-10-11 iwai-tamura upd str -----
                            new SelectListItem() { Value="1", Text="夏期(下期)" },
                            new SelectListItem() { Value="2", Text="年末(上期)" }
                            //new SelectListItem() { Value="2", Text="上期(年末)" },
                            //new SelectListItem() { Value="1", Text="下期(夏期)" }
                            //2016-10-11 iwai-tamura upd end -----                                
                                
                            },
                            "",
                            new Dictionary<string, object> {
                                { "data-width", "50px"}
                            ,{ "title", ""}
                            }
                        )
                        @*@Html.DropDownListFor(
                            m => m.BulkDuration,
                            new SelectListItem[] {
                            new SelectListItem() { Value="1", Text="上期(年末)" },
                            new SelectListItem() { Value="2", Text="下期(夏期)" }
                            },
                            "",
                            new Dictionary<string, object> {
                                { "data-width", "50px"}
                            ,{ "title", ""}
                            }
                        )*@
                        <!--2016-01-21 iwai-tamura upd end-->
                    </div>
                </div>
            </div>
            @*2017-03-31 sbc-sagara upd str レイアウト調整*@
            @*<div class="col-xs-7 min-ht-100">*@
            <div class="col-xs-6 min-ht-100">
            @*2017-03-31 sbc-sagara upd end レイアウト調整*@
              <button type="button" name="DmyDoBulk" value="bulk" class="btn-default pull-right top10" id="DmyDoBulk" @Html.Raw(disabledVal)>作成</button>
            </div>
          </div>
        </div>
      </div>
    </div>
    @* 2017-03-31 sbc-sagara add str 支社管理機能追加 *@
    }
    @if (((LoginUser)Session["LoginUser"]).SYS管理初期処理 == "1") {
    @* 2017-03-31 sbc-sagara add end 支社管理機能追加 *@
    <div class="col-xs-offset-2 col-xs-8">
      <div class="well-ex">
        <div class="well-ex-header">
          <h4>初期データ個別作成</h4>
        </div>
        <div class="well-ex-content">
          <div class="row">
            <div class="col-xs-2">
              <div class="form-group form-group-custom-rg-mg">
                <label class="control-label form-inline">対象</label>
                <div>
                  @Html.DropDownListFor(
                      m => m.DesignateType,
                      new SelectListItem[] {
                        new SelectListItem() { Value="Objective", Text="目標管理" },
                        new SelectListItem() { Value="Skill", Text="職能職務" }
                      },
                      "",
                      new Dictionary<string, object> {
                         { "data-width", "50px"}
                        ,{ "title", ""}
                      }
                    )
                </div>
              </div>
            </div>
            <div class="col-xs-2">
              <div class="form-group form-group-custom-rg-mg">
                <table>
                  <tr>
                    <td>
                      <label class="control-label ">西暦</label>
                      <div>
                        @Html.TextBoxFor(m => m.DesignateYaer, new { name = "DesignateYaer", @class = " ime-disabled", size = "4", maxlength = "4" })
                      </div>
                    </td>
                    <td class="w30 td-padding">
                      <label>年度</label>
                    </td>
                  </tr>
                </table>
              </div>
            </div>
            <div class="col-xs-2">
              <div class="form-group form-group-custom-rg-mg">
                <label class="control-label form-inline">期間</label>
                <div class=" form-inline">
                    <!--2016-01-21 iwai-tamura upd str-->
                    <!--期区分を逆に設定-->
                    @Html.DropDownListFor(
                      m => m.DesignateDuration,
                      new SelectListItem[] {
                        //2016-10-11 iwai-tamura upd str -----
                        new SelectListItem() { Value="1", Text="夏期(下期)" },
                        new SelectListItem() { Value="2", Text="年末(上期)" }
                        //new SelectListItem() { Value="2", Text="上期(年末)" },
                        //new SelectListItem() { Value="1", Text="下期(夏期)" }
                        //2016-10-11 iwai-tamura upd end -----
                      },
                      "",
                      new Dictionary<string, object> {
                         { "data-width", "50px"}
                        ,{ "title", ""}
                      }
                    )
                    @*@Html.DropDownListFor(
                        m => m.DesignateDuration,
                        new SelectListItem[] {
                        new SelectListItem() { Value="1", Text="上期(年末)" },
                        new SelectListItem() { Value="2", Text="下期(夏期)" }
                        },
                        "",
                        new Dictionary<string, object> {
                            { "data-width", "50px"}
                        ,{ "title", ""}
                        }
                    )*@
                    <!--2016-01-21 iwai-tamura upd end-->
                </div>
              </div>
            </div>
            <div class="col-xs-2">
              <div class="form-group form-group-custom-rg-mg">
                <label class="control-label ">社員番号</label>
                <div>
                  @Html.TextBoxFor(m => m.DesignateEmployeeNo, new { name = "DesignateEmployeeNo", @class = " ime-disabled", size = "7", maxlength = "5" })
                </div>
              </div>
            </div>
            <div class="col-xs-4 min-ht-100">
              <button type="button" name="DmyDoDesignate" value="designate" class="btn-default pull-right top10" id="DmyDoDesignate" @Html.Raw(disabledVal)>作成</button>
            </div>
          </div>
        </div>
      </div>
    </div>
    @* 2017-03-31 sbc-sagara add str 支社管理機能追加 *@
    }
    @if (((LoginUser)Session["LoginUser"]).SYS管理確定処理 == "1") {
    @* 2017-03-31 sbc-sagara add end 支社管理機能追加 *@
    <div class="col-xs-offset-2 col-xs-8">
      <div class="well-ex">
        <div class="well-ex-header">
          <h4>確定処理</h4>
        </div>
        <div class="well-ex-content">
          <div class="row">
            <div class="col-xs-2">
              <div class="form-group form-group-custom-rg-mg">
                <label class="control-label form-inline">確定区分</label>
                <div>
                  @Html.DropDownListFor(
                    m => m.CommitArea,
                    commitList,
                    "",
                    new Dictionary<string, object> {
                      { "data-width", "50px"}
                      ,{ "title", ""}
                      }
                    )
                </div>
              </div>
            </div>
            <div class="col-xs-2">
              <div class="form-group form-group-custom-rg-mg">
                <label class="control-label form-inline">対象</label>
                <div class=" form-inline">
                  @Html.DropDownListFor(
                      m => m.CommitType,
                      new SelectListItem[] {
                        new SelectListItem() { Value="Objective", Text="目標管理" },
                        new SelectListItem() { Value="Skill", Text="職能職務" }
                      },
                      "",
                      new Dictionary<string, object> {
                         { "data-width", "50px"}
                        ,{ "title", ""}
                      }
                    )
                </div>
              </div>
            </div>
            <div class="col-xs-2">
              <div class="form-group form-group-custom-rg-mg">
                <table>
                  <tr>
                    <td>
                      <label class="control-label ">西暦</label>
                      <div>
                        @Html.TextBoxFor(m => m.CommitYear, new { name = "year", @class = " ime-disabled", size = "4", maxlength = "4" })
                      </div>
                    </td>
                    <td class="w30 td-padding">
                      <label>年度</label>
                    </td>
                  </tr>
                </table>
              </div>
            </div>
              <!--2016-01-21 iwai-tamura upd str-->
            <div class="col-xs-2">
            <!--
            <div class="col-xs-1">
            -->
            <!--2016-01-21 iwai-tamura upd end-->

              <div class="form-group form-group-custom-rg-mg">
                <label class="control-label form-inline">期間</label>
                <div class=" form-inline">
                    <!--2016-01-21 iwai-tamura upd str-->
                    <!--期区分を逆に設定-->
                    @Html.DropDownListFor(
                        m => m.CommitDuration,
                        new SelectListItem[] {
                        //2016-10-11 iwai-tamura upd str -----
                        new SelectListItem() { Value="1", Text="夏期(下期)" },
                        new SelectListItem() { Value="2", Text="年末(上期)" }
                        //new SelectListItem() { Value="2", Text="上期(年末)" },
                        //new SelectListItem() { Value="1", Text="下期(夏期)" }
                        //2016-10-11 iwai-tamura upd end -----
                        },
                        "",
                        new Dictionary<string, object> {
                            { "data-width", "50px"}
                        ,{ "title", ""}
                        }
                    )
                    @*@Html.DropDownListFor(
                        m => m.CommitDuration,
                        new SelectListItem[] {
                        new SelectListItem() { Value="1", Text="上期(年末)" },
                        new SelectListItem() { Value="2", Text="下期(夏期)" }
                        },
                        "",
                        new Dictionary<string, object> {
                            { "data-width", "50px"}
                        ,{ "title", ""}
                        }
                    )*@
                    <!--2016-01-21 iwai-tamura upd end-->
                </div>
              </div>
            </div>
            @*2017-03-31 sbc-sagara upd str レイアウト調整*@
            @*<div class="col-xs-5 min-ht-100">*@
            <div class="col-xs-4 min-ht-100">
            @*2017-03-31 sbc-sagara upd end レイアウト調整*@
                <button type="button" name="DmyDoCommit" value="確定" class="btn-default pull-right top10" id="DmyDoCommit">確定</button>
            </div>
          </div>
          <div class="row">
            <div class="col-xs-10">
              <div class="form-group" style="width:100%">
                <label class="control-label">最終承認未完了者</label>
                @Html.TextAreaFor(m => m.CommitResult, new { @class = "form-control form-control-custom-textarea", rows = "11", @style = "width:650px;", @readonly = "readonly" })
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    @* 2017-03-31 sbc-sagara add str 支社管理機能追加 *@
    }
    @if (((LoginUser)Session["LoginUser"]).SYS管理USER追加 == "1") {
    @* 2017-03-31 sbc-sagara add end 支社管理機能追加 *@
    @*2017-03-31 sbc-sagara add str アカウント追加機能作成*@
    <div class="col-xs-offset-2 col-xs-8">
        <div class="well-ex">
            <div class="well-ex-header">
                <h4>アカウント追加</h4>
            </div>
            <div class="well-ex-content">
                <div class="row">
                    <div class="col-xs-10">
                        <div class="form-group form-group-custom-rg-mg">
                            <label class="control-label ">社員番号</label>
                            <div>
                                @Html.TextBoxFor(m => m.AddEmployeeNo, new { name = "AddEmployeeNo", @class = " ime-disabled", size = "7", maxlength = "5" })
                            </div>
                        </div>
                        <div class="form-group form-group-custom-rg-mg">
                            <label class="control-label ">パスワード</label>
                            <div>
                                @Html.TextBoxFor(m => m.AddPassword, new { name = "AddPassword", @class = " ime-disabled", size = "7"})
                            </div>
                        </div>
                        @* 2017-04-30 sbc-sagara add str 参照追加機能用*@
                        @* 一時コメント化 実装時要コメント反転 *@
                        <div class="form-group form-group-custom-rg-mg">
                            <label class="control-label ">参照社員番号</label>
                            <div>
                                @Html.TextBoxFor(m => m.ReferenceEmployeeNo, new { name = "ReferenceEmployeeNo", @class = " ime-disabled", size = "7", maxlength = "5" })
                            </div>
                        </div>
                        @*@Html.HiddenFor(m => m.ReferenceEmployeeNo)*@
                        @* 一時コメント化 実装時要コメント反転 *@
                        @* 2017-04-30 sbc-sagara add end 参照追加機能用*@
                    </div>
                    <div class="col-xs-2 min-ht-100">
                        <button type="button" name="DmyAddAccount" value="追加" class="btn-default pull-right top10" id="DmyAddAccount">追加</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @*2017-03-31 sbc-sagara add end アカウント追加機能作成*@
    @* 2017-03-31 sbc-sagara add str 支社管理機能追加 *@
    }
    @if (((LoginUser)Session["LoginUser"]).SYS管理PASS確認 != "0" || ((LoginUser)Session["LoginUser"]).SYS管理PASSRESET != "0") {
    @* 2017-03-31 sbc-sagara add end 支社管理機能追加 *@
    <div class="col-xs-offset-2 col-xs-8">
      <div class="well-ex">
        <div class="well-ex-header">
          @*2017-03-31 sbc-sagara upd str パスワード確認機能作成*@
          @*<h4>パスワードリセット</h4>*@
          <h4>パスワード</h4>
          @*2017-03-31 sbc-sagara upd end パスワード確認機能作成*@
        </div>
        <div class="well-ex-content">
          <div class="row">
            <div class="col-xs-10">
              <div class="form-group form-group-custom-rg-mg">
                <label class="control-label ">社員番号</label>
                <div>
                  @*<input type="text" class="form-control" name="year" size="6">*@
                  @Html.TextBoxFor(m => m.ResetEmployeeNo, new { name = "ResetEmployeeNo", @class = " ime-disabled", size = "7", maxlength = "5" })
                </div>
              </div>
            </div>
              <div class="col-xs-2 min-ht-100">
                  @*2017-03-31 sbc-sagara upd str パスワード確認機能作成*@
                  @*<button type="button" name="DmyResetPwd" value="リセット" class="btn-default pull-right top10" id="DmyResetPwd">リセット</button>*@
                  <div class="pull-right text-right">
                      @if (((LoginUser)Session["LoginUser"]).SYS管理PASS確認 != "0") { @* 2017-03-31 sbc-sagara add 支社管理機能追加 *@
                      <div>
                          <button type="button" name="DmyConfirmPwd" value="確認" class="btn-default top10" id="DmyConfirmPwd">確認</button>
                      </div>
                      @* 2017-03-31 sbc-sagara add str 支社管理機能追加 *@
                      }
                      @if (((LoginUser)Session["LoginUser"]).SYS管理PASSRESET != "0") {
                      @* 2017-03-31 sbc-sagara add end 支社管理機能追加 *@
                      <div>
                          <button type="button" name="DmyResetPwd" value="リセット" class="btn-default top10" id="DmyResetPwd">リセット</button>
                      </div>
                      } @* 2017-03-31 sbc-sagara add 支社管理機能追加 *@
                  </div>
                  @*2017-03-31 sbc-sagara upd end パスワード確認機能作成*@
              </div>
          </div>
        </div>
      </div>
    </div>

    @* 2017-04-30 sbc-sagara add str アップロード,Excel出力 *@
    <div class="col-xs-offset-2 col-xs-8">
        <div class="well-ex">
            <div class="well-ex-header">
                <h4>Excel出力</h4>
            </div>
            <div class="well-ex-content">
                <div class="row">
                    <div class="col-xs-2">
                        <div class="form-group form-group-custom-rg-mg">
                            <label class="control-label form-inline">対象</label>
                            <div>
                                @Html.DropDownListFor(
                                  m => m.OutputTarget,
                                  new SelectListItem[] {
                                    new SelectListItem() { Value="Objective", Text="目標管理" },
                                    new SelectListItem() { Value="Skill", Text="職能職務" }
                                  },
                                  new Dictionary<string, object> {
                                     { "title", ""}
                                  }
                                )
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-2">
                        <div class="form-group form-group-custom-rg-mg">
                            <label class="control-label form-inline">西暦</label>
                            <div>
                                @Html.TextBoxFor(m => m.OutputYear, new { name = "BulkYear", @class = " ime-disabled", size = "4", maxlength = "4" })<label>年度</label>
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-8 min-ht-100">
                        <div class="pull-right text-right">
                            <div>
                                <button type="button" name="DmyExcelOutput" value="Excel出力" class="btn-default top10" id="DmyExcelOutput">Excel出力</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xs-offset-2 col-xs-8">
        <div class="well-ex">
            <div class="well-ex-header">
                <h4>ファイルアップロード</h4>
            </div>
            <div class="well-ex-content">

                <div class="row">
                    <div class="col-xs-2">
                        <div class="form-group form-group-custom-rg-mg">
                            <label class="control-label form-inline">対象</label>
                            <div>
                                @Html.DropDownListFor(
                                  m => m.UploadTarget,
                                  new SelectListItem[] {
                                    new SelectListItem() { Value="Objective", Text="目標管理" },
                                    new SelectListItem() { Value="Skill", Text="職能職務" }
                                  },
                                  new Dictionary<string, object> {
                                     { "title", ""}
                                  }
                                )
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-2">
                        <div class="form-group form-group-custom-rg-mg">
                            <table>
                                <tr>
                                    <td>
                                        <label class="control-label ">西暦</label>
                                        <div>
                                            @Html.TextBoxFor(m => m.UploadYear, new { name = "BulkYear", @class = " ime-disabled", size = "4", maxlength = "4" })
                                        </div>
                                    </td>
                                    <td class="w30 td-padding">
                                        <label>年度</label>
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                    <div class="col-xs-6">
                        <div class="form-group form-group-custom-rg-mg">
                            <label class="control-label ">アップロードファイル選択</label>
                            <div>
                                @Html.TextBoxFor(m => m.UploadFile, new { @type = "file" })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-2 min-ht-100">
                        <div class="pull-right text-right">
                            <div>
                                <button type="button" name="DmyUpload" value="アップロード" class="btn-default top10" id="DmyUpload">アップロード</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @* 2017-04-30 sbc-sagara add end アップロード,Excel出力 *@


    @* 2017-03-31 sbc-sagara add str 支社管理機能追加 *@
    }
    @if (((LoginUser)Session["LoginUser"]).SYS管理連絡事項 == "1") {
    @* 2017-03-31 sbc-sagara add end 支社管理機能追加 *@
    <div class="col-xs-offset-2 col-xs-8">
      <div class="well-ex">
        <div class="well-ex-header">
          <h4>お知らせ管理</h4>
        </div>
        <div class="well-ex-content">
          <div class="row">
            <div class="col-xs-10">
              <div class="form-group" style="width:100%">
                <label class="control-label">お知らせ</label>
                @Html.TextAreaFor(m => m.Infomation, new { @class = "form-control form-control-custom-textarea", rows = "11", @style = "width:650px;" })
                @Html.HiddenFor(m => m.Key)
              </div>
            </div>
            <div class="col-xs-2 min-ht-100">
              <button type="button" name="DmyCreateInfo" value="登録" class="btn-default pull-right top10" id="DmyCreateInfo" @Html.Raw(disabledVal)>登録</button>
            </div>
          </div>
        </div>
      </div>
    </div>
    } @* 2017-03-31 sbc-sagara add 支社管理機能追加 *@
    @* 2017-03-31 sbc-sagara add str 戻るボタン追加 *@
    <div class="col-xs-offset-2 col-xs-8">
        <div class="col-xs-12">
            <div class="col-xs-12">
                <button type="submit" name="Back" value="戻る" class="btn-default pull-right" id="backbutton" style="margin-left:5px;">戻る</button>
            </div>
        </div>
    </div>
    @* 2017-03-31 sbc-sagara add end 戻るボタン追加 *@
  </div>

  @*隠しボタンエリア*@
  <div style="height:0px;">
    <button type="submit" name="DoBulk" value="bulk" class="btn  btn-primary pull-right top10" id="DoBulk" style="visibility:hidden;">作成</button>
    <button type="submit" name="DoDesignate" value="designate" class="btn  btn-primary pull-right top10" id="DoDesignate" style="visibility:hidden;">作成</button>
    <button type="submit" name="DoCommit" value="確定" class="btn  btn-primary pull-right top10" id="DoCommit" style="visibility:hidden;">確定</button>
    <button type="submit" name="ResetPwd" value="リセット" class="btn  btn-primary pull-right top10" id="ResetPwd" style="visibility:hidden;">リセット</button>
    <button type="submit" name="CreateInfo" value="登録" class="btn  btn-primary pull-right top10" id="CreateInfo" style="visibility:hidden;">登録</button>
    @*2017-03-31 sbc-sagara add str アカウント追加・パスワード確認機能追加*@
    <button type="submit" name="AddAccount" value="確認" class="btn  btn-primary pull-right top10" id="AddAccount" style="visibility:hidden;">作成</button>
    <button type="submit" name="AddAccount_Reference" value="確認" class="btn  btn-primary pull-right top10" id="AddAccount_Reference" style="visibility:hidden;">参照作成</button>
    <button type="submit" name="ConfirmPwd" value="確認" class="btn  btn-primary pull-right top10" id="ConfirmPwd" style="visibility:hidden;">確認</button>
    @*2017-03-31 sbc-sagara add end アカウント追加・パスワード確認機能追加*@
    @* 2017-04-30 sbc-sagara add str アップロード,csv出力 *@
    <button type="submit" name="Upload" value="アップロード" class="btn  btn-primary pull-right top10" id="Upload" style="visibility:hidden;">アップロード</button>
    <button type="submit" name="ExcelOutput" value="Excel出力" class="btn  btn-primary pull-right top10" id="ExcelOutput" style="visibility:hidden;">Excel出力</button>
    @* 2017-04-30 sbc-sagara add str アップロード,csv出力 *@
  </div>

  @Scripts.Render("~/Scripts/js/sys")

}
@section Scripts {
  @Scripts.Render("~/bundles/jqueryval")
}
